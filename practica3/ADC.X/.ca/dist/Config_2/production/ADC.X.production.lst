

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Dec 20 12:44:37 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	16F818
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F818 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     001E                     ADRESH          equ	30	;# 
    80     001F                     ADCON0          equ	31	;# 
    81     0081                     OPTION_REG      equ	129	;# 
    82     0085                     TRISA           equ	133	;# 
    83     0086                     TRISB           equ	134	;# 
    84     008C                     PIE1            equ	140	;# 
    85     008D                     PIE2            equ	141	;# 
    86     008E                     PCON            equ	142	;# 
    87     008F                     OSCCON          equ	143	;# 
    88     0090                     OSCTUNE         equ	144	;# 
    89     0092                     PR2             equ	146	;# 
    90     0093                     SSPADD          equ	147	;# 
    91     0094                     SSPSTAT         equ	148	;# 
    92     009E                     ADRESL          equ	158	;# 
    93     009F                     ADCON1          equ	159	;# 
    94     010C                     EEDATA          equ	268	;# 
    95     010D                     EEADR           equ	269	;# 
    96     010E                     EEDATH          equ	270	;# 
    97     010F                     EEADRH          equ	271	;# 
    98     018C                     EECON1          equ	396	;# 
    99     018D                     EECON2          equ	397	;# 
   100     0000                     INDF            equ	0	;# 
   101     0001                     TMR0            equ	1	;# 
   102     0002                     PCL             equ	2	;# 
   103     0003                     STATUS          equ	3	;# 
   104     0004                     FSR             equ	4	;# 
   105     0005                     PORTA           equ	5	;# 
   106     0006                     PORTB           equ	6	;# 
   107     000A                     PCLATH          equ	10	;# 
   108     000B                     INTCON          equ	11	;# 
   109     000C                     PIR1            equ	12	;# 
   110     000D                     PIR2            equ	13	;# 
   111     000E                     TMR1            equ	14	;# 
   112     000E                     TMR1L           equ	14	;# 
   113     000F                     TMR1H           equ	15	;# 
   114     0010                     T1CON           equ	16	;# 
   115     0011                     TMR2            equ	17	;# 
   116     0012                     T2CON           equ	18	;# 
   117     0013                     SSPBUF          equ	19	;# 
   118     0014                     SSPCON          equ	20	;# 
   119     0015                     CCPR1           equ	21	;# 
   120     0015                     CCPR1L          equ	21	;# 
   121     0016                     CCPR1H          equ	22	;# 
   122     0017                     CCP1CON         equ	23	;# 
   123     001E                     ADRESH          equ	30	;# 
   124     001F                     ADCON0          equ	31	;# 
   125     0081                     OPTION_REG      equ	129	;# 
   126     0085                     TRISA           equ	133	;# 
   127     0086                     TRISB           equ	134	;# 
   128     008C                     PIE1            equ	140	;# 
   129     008D                     PIE2            equ	141	;# 
   130     008E                     PCON            equ	142	;# 
   131     008F                     OSCCON          equ	143	;# 
   132     0090                     OSCTUNE         equ	144	;# 
   133     0092                     PR2             equ	146	;# 
   134     0093                     SSPADD          equ	147	;# 
   135     0094                     SSPSTAT         equ	148	;# 
   136     009E                     ADRESL          equ	158	;# 
   137     009F                     ADCON1          equ	159	;# 
   138     010C                     EEDATA          equ	268	;# 
   139     010D                     EEADR           equ	269	;# 
   140     010E                     EEDATH          equ	270	;# 
   141     010F                     EEADRH          equ	271	;# 
   142     018C                     EECON1          equ	396	;# 
   143     018D                     EECON2          equ	397	;# 
   144     001E                     _ADRESH         set	30
   145     001F                     _ADCON0         set	31
   146     0005                     _PORTAbits      set	5
   147     0006                     _PORTBbits      set	6
   148     009E                     _ADRESL         set	158
   149     009F                     _ADCON1         set	159
   150     0085                     _TRISAbits      set	133
   151     0086                     _TRISB          set	134
   152                           
   153                           	psect	cinit
   154     03FE                     start_initialization:	
   155                           ; #config settings
   156                           
   157     03FE                     __initialization:
   158     03FE                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161     03FE                     __end_of__initialization:
   162     03FE  0183               	clrf	3
   163     03FF  2AD0               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	cstackCOMMON
   166     0040                     __pcstackCOMMON:
   167     0040                     ?_main:
   168     0040                     ?___wmul:	
   169                           ; 1 bytes @ 0x0
   170                           
   171     0040                     ___wmul@multiplier:	
   172                           ; 2 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176     0040                     	ds	2
   177     0042                     ___wmul@multiplicand:
   178                           
   179                           ; 2 bytes @ 0x2
   180     0042                     	ds	2
   181     0044                     ___wmul@product:
   182     0044                     ??___wmul:	
   183                           ; 2 bytes @ 0x4
   184                           
   185                           
   186                           ; 1 bytes @ 0x4
   187     0044                     	ds	2
   188     0046                     ?___lwdiv:
   189     0046                     ___lwdiv@divisor:	
   190                           ; 2 bytes @ 0x6
   191                           
   192                           
   193                           ; 2 bytes @ 0x6
   194     0046                     	ds	2
   195     0048                     ___lwdiv@dividend:
   196                           
   197                           ; 2 bytes @ 0x8
   198     0048                     	ds	2
   199     004A                     ___lwdiv@quotient:
   200     004A                     ??___lwdiv:	
   201                           ; 2 bytes @ 0xA
   202                           
   203                           
   204                           ; 1 bytes @ 0xA
   205     004A                     	ds	2
   206     004C                     ___lwdiv@counter:
   207                           
   208                           ; 1 bytes @ 0xC
   209     004C                     	ds	1
   210     004D                     ?___lwmod:
   211     004D                     ___lwmod@divisor:	
   212                           ; 2 bytes @ 0xD
   213                           
   214                           
   215                           ; 2 bytes @ 0xD
   216     004D                     	ds	2
   217     004F                     ___lwmod@dividend:
   218                           
   219                           ; 2 bytes @ 0xF
   220     004F                     	ds	2
   221     0051                     ___lwmod@counter:
   222     0051                     ??___lwmod:	
   223                           ; 1 bytes @ 0x11
   224                           
   225                           
   226                           ; 1 bytes @ 0x11
   227     0051                     	ds	1
   228     0052                     ?_actualizarPantalla:
   229     0052                     actualizarPantalla@display_value:	
   230                           ; 1 bytes @ 0x12
   231                           
   232                           
   233                           ; 2 bytes @ 0x12
   234     0052                     	ds	2
   235     0054                     ??_actualizarPantalla:
   236                           
   237                           ; 1 bytes @ 0x14
   238     0054                     	ds	3
   239     0057                     actualizarPantalla@digits:
   240                           
   241                           ; 8 bytes @ 0x17
   242     0057                     	ds	8
   243     005F                     actualizarPantalla@i:
   244                           
   245                           ; 2 bytes @ 0x1F
   246     005F                     	ds	2
   247     0061                     ??_main:
   248                           
   249                           ; 1 bytes @ 0x21
   250     0061                     	ds	1
   251     0062                     main@adc_value:
   252                           
   253                           ; 2 bytes @ 0x22
   254     0062                     	ds	2
   255     0064                     main@voltage_mv:
   256                           
   257                           ; 2 bytes @ 0x24
   258     0064                     	ds	2
   259                           
   260                           	psect	maintext
   261     02D0                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 52 in file "../main_adc.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  voltage_mv      2   36[COMMON] unsigned int 
   272 ;;  adc_value       2   34[COMMON] unsigned int 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1
   282 ;;      Params:         0       0       0
   283 ;;      Locals:         4       0       0
   284 ;;      Temps:          1       0       0
   285 ;;      Totals:         5       0       0
   286 ;;Total ram usage:        5 bytes
   287 ;; Hardware stack levels required when called: 2
   288 ;; This function calls:
   289 ;;		___lwdiv
   290 ;;		___wmul
   291 ;;		_actualizarPantalla
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     02D0                     _main:	
   298                           ;psect for function _main
   299                           
   300                           
   301                           ;../main_adc.c: 54:     unsigned int voltage_mv = 0;
   302                           
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   305     02D0  01E4               	clrf	main@voltage_mv
   306     02D1  01E5               	clrf	main@voltage_mv+1
   307                           
   308                           ;../main_adc.c: 56:     TRISB = 0x00;
   309     02D2  1683               	bsf	3,5	;RP0=1, select bank1
   310     02D3  0186               	clrf	6	;volatile
   311                           
   312                           ;../main_adc.c: 57:     TRISAbits.TRISA2 = 0;
   313     02D4  1105               	bcf	5,2	;volatile
   314                           
   315                           ;../main_adc.c: 58:     TRISAbits.TRISA0 = 1;
   316     02D5  1405               	bsf	5,0	;volatile
   317     02D6                     l798:
   318                           
   319                           ;../main_adc.c: 61:     _delay((unsigned long)((10)*(500000/4000.0)));
   320     02D6  30F9               	movlw	249
   321     02D7  00E1               	movwf	??_main
   322     02D8                     u637:
   323     02D8  2AD9               	nop2
   324     02D9  0BE1               	decfsz	??_main,f
   325     02DA  2AD8               	goto	u637
   326     02DB  2ADC               	nop2
   327     02DC  2ADD               	nop2
   328                           
   329                           ;../main_adc.c: 65:         ADCON0 = 0b01000001;
   330     02DD  3041               	movlw	65
   331     02DE  1283               	bcf	3,5	;RP0=0, select bank0
   332     02DF  1303               	bcf	3,6	;RP1=0, select bank0
   333     02E0  009F               	movwf	31	;volatile
   334                           
   335                           ;../main_adc.c: 66:         ADCON1 = 0b10001110;
   336     02E1  308E               	movlw	142
   337     02E2  1683               	bsf	3,5	;RP0=1, select bank1
   338     02E3  009F               	movwf	31	;volatile
   339                           
   340                           ;../main_adc.c: 68:         ADCON0 |= 0b00000100;
   341     02E4  1283               	bcf	3,5	;RP0=0, select bank0
   342     02E5  151F               	bsf	31,2	;volatile
   343     02E6                     l808:	
   344                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   345                           
   346                           
   347                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   348     02E6  1283               	bcf	3,5	;RP0=0, select bank0
   349     02E7  1303               	bcf	3,6	;RP1=0, select bank0
   350     02E8  1D1F               	btfss	31,2	;volatile
   351     02E9  2AF2               	goto	l810
   352                           
   353                           ;../main_adc.c: 70:             _delay((unsigned long)((10)*(500000/4000.0)));
   354     02EA  30F9               	movlw	249
   355     02EB  00E1               	movwf	??_main
   356     02EC                     u647:
   357     02EC  2AED               	nop2
   358     02ED  0BE1               	decfsz	??_main,f
   359     02EE  2AEC               	goto	u647
   360     02EF  2AF0               	nop2
   361     02F0  2AF1               	nop2
   362     02F1  2AE6               	goto	l808
   363     02F2                     l810:
   364                           
   365                           ;../main_adc.c: 74:         adc_value = (unsigned int)( (ADRESH << 8) | ADRESL );
   366     02F2  081E               	movf	30,w	;volatile
   367     02F3  00E3               	movwf	main@adc_value+1
   368     02F4  1683               	bsf	3,5	;RP0=1, select bank1
   369     02F5  081E               	movf	30,w	;volatile
   370     02F6  00E2               	movwf	main@adc_value
   371                           
   372                           ;../main_adc.c: 77:         voltage_mv = ((unsigned int)adc_value * 5000) / 1023;
   373     02F7  30FF               	movlw	255
   374     02F8  00C6               	movwf	___lwdiv@divisor
   375     02F9  3003               	movlw	3
   376     02FA  00C7               	movwf	___lwdiv@divisor+1
   377     02FB  0863               	movf	main@adc_value+1,w
   378     02FC  00C1               	movwf	___wmul@multiplier+1
   379     02FD  0862               	movf	main@adc_value,w
   380     02FE  00C0               	movwf	___wmul@multiplier
   381     02FF  3088               	movlw	136
   382     0300  00C2               	movwf	___wmul@multiplicand
   383     0301  3013               	movlw	19
   384     0302  00C3               	movwf	___wmul@multiplicand+1
   385     0303  2245               	fcall	___wmul
   386     0304  0841               	movf	?___wmul+1,w
   387     0305  00C9               	movwf	___lwdiv@dividend+1
   388     0306  0840               	movf	?___wmul,w
   389     0307  00C8               	movwf	___lwdiv@dividend
   390     0308  2296               	fcall	___lwdiv
   391     0309  0847               	movf	?___lwdiv+1,w
   392     030A  00E5               	movwf	main@voltage_mv+1
   393     030B  0846               	movf	?___lwdiv,w
   394     030C  00E4               	movwf	main@voltage_mv
   395                           
   396                           ;../main_adc.c: 80:         actualizarPantalla(voltage_mv);
   397     030D  0865               	movf	main@voltage_mv+1,w
   398     030E  00D3               	movwf	actualizarPantalla@display_value+1
   399     030F  0864               	movf	main@voltage_mv,w
   400     0310  00D2               	movwf	actualizarPantalla@display_value
   401     0311  2313               	fcall	_actualizarPantalla
   402     0312  2AD6               	goto	l798
   403     0313                     __end_of_main:
   404                           
   405                           	psect	text1
   406     0313                     __ptext1:	
   407 ;; *************** function _actualizarPantalla *****************
   408 ;; Defined at:
   409 ;;		line 25 in file "../main_adc.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  display_valu    2   18[COMMON] unsigned int 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  digits          8   23[COMMON] int [4]
   414 ;;  i               2   31[COMMON] int 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/100
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1
   424 ;;      Params:         2       0       0
   425 ;;      Locals:        10       0       0
   426 ;;      Temps:          3       0       0
   427 ;;      Totals:        15       0       0
   428 ;;Total ram usage:       15 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 1
   431 ;; This function calls:
   432 ;;		___lwdiv
   433 ;;		___lwmod
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439     0313                     _actualizarPantalla:	
   440                           ;psect for function _actualizarPantalla
   441                           
   442                           
   443                           ;../main_adc.c: 28:     digits[0] = display_value / 1000;
   444                           
   445                           ;incstack = 0
   446                           ; Regs used in _actualizarPantalla: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   447     0313  30E8               	movlw	232
   448     0314  00C6               	movwf	___lwdiv@divisor
   449     0315  3003               	movlw	3
   450     0316  00C7               	movwf	___lwdiv@divisor+1
   451     0317  0853               	movf	actualizarPantalla@display_value+1,w
   452     0318  00C9               	movwf	___lwdiv@dividend+1
   453     0319  0852               	movf	actualizarPantalla@display_value,w
   454     031A  00C8               	movwf	___lwdiv@dividend
   455     031B  2296               	fcall	___lwdiv
   456     031C  0847               	movf	?___lwdiv+1,w
   457     031D  00D8               	movwf	actualizarPantalla@digits+1
   458     031E  0846               	movf	?___lwdiv,w
   459     031F  00D7               	movwf	actualizarPantalla@digits
   460                           
   461                           ;../main_adc.c: 29:     digits[1] = (display_value / 100) % 10;
   462     0320  300A               	movlw	10
   463     0321  00CD               	movwf	___lwmod@divisor
   464     0322  3000               	movlw	0
   465     0323  00CE               	movwf	___lwmod@divisor+1
   466     0324  3064               	movlw	100
   467     0325  00C6               	movwf	___lwdiv@divisor
   468     0326  3000               	movlw	0
   469     0327  00C7               	movwf	___lwdiv@divisor+1
   470     0328  0853               	movf	actualizarPantalla@display_value+1,w
   471     0329  00C9               	movwf	___lwdiv@dividend+1
   472     032A  0852               	movf	actualizarPantalla@display_value,w
   473     032B  00C8               	movwf	___lwdiv@dividend
   474     032C  2296               	fcall	___lwdiv
   475     032D  0847               	movf	?___lwdiv+1,w
   476     032E  00D0               	movwf	___lwmod@dividend+1
   477     032F  0846               	movf	?___lwdiv,w
   478     0330  00CF               	movwf	___lwmod@dividend
   479     0331  2266               	fcall	___lwmod
   480     0332  084E               	movf	?___lwmod+1,w
   481     0333  00DA               	movwf	actualizarPantalla@digits+3
   482     0334  084D               	movf	?___lwmod,w
   483     0335  00D9               	movwf	actualizarPantalla@digits+2
   484                           
   485                           ;../main_adc.c: 30:     digits[2] = (display_value / 10) % 10;
   486     0336  300A               	movlw	10
   487     0337  00CD               	movwf	___lwmod@divisor
   488     0338  3000               	movlw	0
   489     0339  00CE               	movwf	___lwmod@divisor+1
   490     033A  300A               	movlw	10
   491     033B  00C6               	movwf	___lwdiv@divisor
   492     033C  3000               	movlw	0
   493     033D  00C7               	movwf	___lwdiv@divisor+1
   494     033E  0853               	movf	actualizarPantalla@display_value+1,w
   495     033F  00C9               	movwf	___lwdiv@dividend+1
   496     0340  0852               	movf	actualizarPantalla@display_value,w
   497     0341  00C8               	movwf	___lwdiv@dividend
   498     0342  2296               	fcall	___lwdiv
   499     0343  0847               	movf	?___lwdiv+1,w
   500     0344  00D0               	movwf	___lwmod@dividend+1
   501     0345  0846               	movf	?___lwdiv,w
   502     0346  00CF               	movwf	___lwmod@dividend
   503     0347  2266               	fcall	___lwmod
   504     0348  084E               	movf	?___lwmod+1,w
   505     0349  00DC               	movwf	actualizarPantalla@digits+5
   506     034A  084D               	movf	?___lwmod,w
   507     034B  00DB               	movwf	actualizarPantalla@digits+4
   508                           
   509                           ;../main_adc.c: 31:     digits[3] = display_value % 10;
   510     034C  300A               	movlw	10
   511     034D  00CD               	movwf	___lwmod@divisor
   512     034E  3000               	movlw	0
   513     034F  00CE               	movwf	___lwmod@divisor+1
   514     0350  0853               	movf	actualizarPantalla@display_value+1,w
   515     0351  00D0               	movwf	___lwmod@dividend+1
   516     0352  0852               	movf	actualizarPantalla@display_value,w
   517     0353  00CF               	movwf	___lwmod@dividend
   518     0354  2266               	fcall	___lwmod
   519     0355  084E               	movf	?___lwmod+1,w
   520     0356  00DE               	movwf	actualizarPantalla@digits+7
   521     0357  084D               	movf	?___lwmod,w
   522     0358  00DD               	movwf	actualizarPantalla@digits+6
   523                           
   524                           ;../main_adc.c: 33:     for (i = 0; i < 4; i++) {
   525     0359  01DF               	clrf	actualizarPantalla@i
   526     035A  01E0               	clrf	actualizarPantalla@i+1
   527     035B                     l760:
   528                           
   529                           ;../main_adc.c: 34:         PORTBbits.RB0 = (digits[i] >> 0) & 0x01;
   530     035B  085F               	movf	actualizarPantalla@i,w
   531     035C  00D4               	movwf	??_actualizarPantalla
   532     035D  0754               	addwf	??_actualizarPantalla,w
   533     035E  3E57               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   534     035F  0084               	movwf	4
   535     0360  3001               	movlw	1
   536     0361  0500               	andwf	0,w
   537     0362  00D5               	movwf	??_actualizarPantalla+1
   538     0363  1283               	bcf	3,5	;RP0=0, select bank0
   539     0364  1303               	bcf	3,6	;RP1=0, select bank0
   540     0365  0806               	movf	6,w	;volatile
   541     0366  0655               	xorwf	??_actualizarPantalla+1,w
   542     0367  39FE               	andlw	-2
   543     0368  0655               	xorwf	??_actualizarPantalla+1,w
   544     0369  0086               	movwf	6	;volatile
   545                           
   546                           ;../main_adc.c: 35:         PORTBbits.RB1 = (digits[i] >> 1) & 0x01;
   547     036A  085F               	movf	actualizarPantalla@i,w
   548     036B  00D4               	movwf	??_actualizarPantalla
   549     036C  0754               	addwf	??_actualizarPantalla,w
   550     036D  3E57               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   551     036E  0084               	movwf	4
   552     036F  0800               	movf	0,w
   553     0370  00D5               	movwf	??_actualizarPantalla+1
   554     0371  1003               	clrc
   555     0372  0C55               	rrf	??_actualizarPantalla+1,w
   556     0373  3901               	andlw	1
   557     0374  00D6               	movwf	??_actualizarPantalla+2
   558     0375  0DD6               	rlf	??_actualizarPantalla+2,f
   559     0376  0806               	movf	6,w	;volatile
   560     0377  0656               	xorwf	??_actualizarPantalla+2,w
   561     0378  39FD               	andlw	-3
   562     0379  0656               	xorwf	??_actualizarPantalla+2,w
   563     037A  0086               	movwf	6	;volatile
   564                           
   565                           ;../main_adc.c: 36:         PORTBbits.RB2 = (digits[i] >> 2) & 0x01;
   566     037B  085F               	movf	actualizarPantalla@i,w
   567     037C  00D4               	movwf	??_actualizarPantalla
   568     037D  0754               	addwf	??_actualizarPantalla,w
   569     037E  3E57               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   570     037F  0084               	movwf	4
   571     0380  0800               	movf	0,w
   572     0381  00D5               	movwf	??_actualizarPantalla+1
   573     0382  3002               	movlw	2
   574     0383                     u455:
   575     0383  1003               	clrc
   576     0384  0CD5               	rrf	??_actualizarPantalla+1,f
   577     0385  3EFF               	addlw	-1
   578     0386  1D03               	skipz
   579     0387  2B83               	goto	u455
   580     0388  0855               	movf	??_actualizarPantalla+1,w
   581     0389  3901               	andlw	1
   582     038A  00D6               	movwf	??_actualizarPantalla+2
   583     038B  0DD6               	rlf	??_actualizarPantalla+2,f
   584     038C  0DD6               	rlf	??_actualizarPantalla+2,f
   585     038D  0806               	movf	6,w	;volatile
   586     038E  0656               	xorwf	??_actualizarPantalla+2,w
   587     038F  39FB               	andlw	-5
   588     0390  0656               	xorwf	??_actualizarPantalla+2,w
   589     0391  0086               	movwf	6	;volatile
   590                           
   591                           ;../main_adc.c: 37:         PORTBbits.RB3 = (digits[i] >> 3) & 0x01;
   592     0392  085F               	movf	actualizarPantalla@i,w
   593     0393  00D4               	movwf	??_actualizarPantalla
   594     0394  0754               	addwf	??_actualizarPantalla,w
   595     0395  3E57               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   596     0396  0084               	movwf	4
   597     0397  0800               	movf	0,w
   598     0398  00D5               	movwf	??_actualizarPantalla+1
   599     0399  3003               	movlw	3
   600     039A                     u465:
   601     039A  1003               	clrc
   602     039B  0CD5               	rrf	??_actualizarPantalla+1,f
   603     039C  3EFF               	addlw	-1
   604     039D  1D03               	skipz
   605     039E  2B9A               	goto	u465
   606     039F  0855               	movf	??_actualizarPantalla+1,w
   607     03A0  3901               	andlw	1
   608     03A1  00D6               	movwf	??_actualizarPantalla+2
   609     03A2  0DD6               	rlf	??_actualizarPantalla+2,f
   610     03A3  0DD6               	rlf	??_actualizarPantalla+2,f
   611     03A4  0DD6               	rlf	??_actualizarPantalla+2,f
   612     03A5  0806               	movf	6,w	;volatile
   613     03A6  0656               	xorwf	??_actualizarPantalla+2,w
   614     03A7  39F7               	andlw	-9
   615     03A8  0656               	xorwf	??_actualizarPantalla+2,w
   616     03A9  0086               	movwf	6	;volatile
   617                           
   618                           ;../main_adc.c: 40:         PORTBbits.RB4 = (i == 3);
   619     03AA  3003               	movlw	3
   620     03AB  065F               	xorwf	actualizarPantalla@i,w
   621     03AC  0460               	iorwf	actualizarPantalla@i+1,w
   622     03AD  1D03               	btfss	3,2
   623     03AE  2BB3               	goto	u470
   624     03AF  1283               	bcf	3,5	;RP0=0, select bank0
   625     03B0  1303               	bcf	3,6	;RP1=0, select bank0
   626     03B1  1606               	bsf	6,4	;volatile
   627     03B2  2BB6               	goto	l764
   628     03B3                     u470:
   629     03B3  1283               	bcf	3,5	;RP0=0, select bank0
   630     03B4  1303               	bcf	3,6	;RP1=0, select bank0
   631     03B5  1206               	bcf	6,4	;volatile
   632     03B6                     l764:
   633                           
   634                           ;../main_adc.c: 41:         PORTBbits.RB5 = (i == 2);
   635     03B6  3002               	movlw	2
   636     03B7  065F               	xorwf	actualizarPantalla@i,w
   637     03B8  0460               	iorwf	actualizarPantalla@i+1,w
   638     03B9  1D03               	btfss	3,2
   639     03BA  2BBF               	goto	u490
   640     03BB  1283               	bcf	3,5	;RP0=0, select bank0
   641     03BC  1303               	bcf	3,6	;RP1=0, select bank0
   642     03BD  1686               	bsf	6,5	;volatile
   643     03BE  2BC2               	goto	l766
   644     03BF                     u490:
   645     03BF  1283               	bcf	3,5	;RP0=0, select bank0
   646     03C0  1303               	bcf	3,6	;RP1=0, select bank0
   647     03C1  1286               	bcf	6,5	;volatile
   648     03C2                     l766:
   649                           
   650                           ;../main_adc.c: 42:         PORTBbits.RB6 = (i == 1);
   651     03C2  035F               	decf	actualizarPantalla@i,w
   652     03C3  0460               	iorwf	actualizarPantalla@i+1,w
   653     03C4  1D03               	btfss	3,2
   654     03C5  2BCA               	goto	u510
   655     03C6  1283               	bcf	3,5	;RP0=0, select bank0
   656     03C7  1303               	bcf	3,6	;RP1=0, select bank0
   657     03C8  1706               	bsf	6,6	;volatile
   658     03C9  2BCD               	goto	l768
   659     03CA                     u510:
   660     03CA  1283               	bcf	3,5	;RP0=0, select bank0
   661     03CB  1303               	bcf	3,6	;RP1=0, select bank0
   662     03CC  1306               	bcf	6,6	;volatile
   663     03CD                     l768:
   664                           
   665                           ;../main_adc.c: 43:         PORTBbits.RB7 = (i == 0);
   666     03CD  085F               	movf	actualizarPantalla@i,w
   667     03CE  0460               	iorwf	actualizarPantalla@i+1,w
   668     03CF  1D03               	btfss	3,2
   669     03D0  2BD5               	goto	u530
   670     03D1  1283               	bcf	3,5	;RP0=0, select bank0
   671     03D2  1303               	bcf	3,6	;RP1=0, select bank0
   672     03D3  1786               	bsf	6,7	;volatile
   673     03D4  2BD8               	goto	l770
   674     03D5                     u530:
   675     03D5  1283               	bcf	3,5	;RP0=0, select bank0
   676     03D6  1303               	bcf	3,6	;RP1=0, select bank0
   677     03D7  1386               	bcf	6,7	;volatile
   678     03D8                     l770:
   679                           
   680                           ;../main_adc.c: 46:         PORTAbits.RA2 = (i != 0);
   681     03D8  085F               	movf	actualizarPantalla@i,w
   682     03D9  0460               	iorwf	actualizarPantalla@i+1,w
   683     03DA  1903               	btfsc	3,2
   684     03DB  2BE0               	goto	u550
   685     03DC  1283               	bcf	3,5	;RP0=0, select bank0
   686     03DD  1303               	bcf	3,6	;RP1=0, select bank0
   687     03DE  1505               	bsf	5,2	;volatile
   688     03DF  2BE3               	goto	l772
   689     03E0                     u550:
   690     03E0  1283               	bcf	3,5	;RP0=0, select bank0
   691     03E1  1303               	bcf	3,6	;RP1=0, select bank0
   692     03E2  1105               	bcf	5,2	;volatile
   693     03E3                     l772:
   694                           
   695                           ;../main_adc.c: 48:         _delay((unsigned long)((20)*(500000/4000.0)));
   696     03E3  3004               	movlw	4
   697     03E4  00D5               	movwf	??_actualizarPantalla+1
   698     03E5  303D               	movlw	61
   699     03E6  00D4               	movwf	??_actualizarPantalla
   700     03E7                     u657:
   701     03E7  0BD4               	decfsz	??_actualizarPantalla,f
   702     03E8  2BE7               	goto	u657
   703     03E9  0BD5               	decfsz	??_actualizarPantalla+1,f
   704     03EA  2BE7               	goto	u657
   705     03EB  2BEC               	nop2
   706                           
   707                           ;../main_adc.c: 49:     }
   708     03EC  3001               	movlw	1
   709     03ED  07DF               	addwf	actualizarPantalla@i,f
   710     03EE  1803               	skipnc
   711     03EF  0AE0               	incf	actualizarPantalla@i+1,f
   712     03F0  3000               	movlw	0
   713     03F1  07E0               	addwf	actualizarPantalla@i+1,f
   714     03F2  0860               	movf	actualizarPantalla@i+1,w
   715     03F3  3A80               	xorlw	128
   716     03F4  00FF               	movwf	127
   717     03F5  3080               	movlw	128
   718     03F6  027F               	subwf	127,w
   719     03F7  1D03               	skipz
   720     03F8  2BFB               	goto	u575
   721     03F9  3004               	movlw	4
   722     03FA  025F               	subwf	actualizarPantalla@i,w
   723     03FB                     u575:
   724     03FB  1803               	btfsc	3,0
   725     03FC  0008               	return
   726     03FD  2B5B               	goto	l760
   727     03FE                     __end_of_actualizarPantalla:
   728                           
   729                           	psect	text2
   730     0266                     __ptext2:	
   731 ;; *************** function ___lwmod *****************
   732 ;; Defined at:
   733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  divisor         2   13[COMMON] unsigned int 
   736 ;;  dividend        2   15[COMMON] unsigned int 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  counter         1   17[COMMON] unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  2   13[COMMON] unsigned int 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0
   743 ;; Tracked objects:
   744 ;;		On entry : 0/100
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1
   748 ;;      Params:         4       0       0
   749 ;;      Locals:         1       0       0
   750 ;;      Temps:          0       0       0
   751 ;;      Totals:         5       0       0
   752 ;;Total ram usage:        5 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_actualizarPantalla
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     0266                     ___lwmod:	
   762                           ;psect for function ___lwmod
   763                           
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   767     0266  084D               	movf	___lwmod@divisor,w
   768     0267  044E               	iorwf	___lwmod@divisor+1,w
   769     0268  1903               	btfsc	3,2
   770     0269  2A91               	goto	l742
   771     026A  3001               	movlw	1
   772     026B  00D1               	movwf	___lwmod@counter
   773     026C                     l732:
   774     026C  1BCE               	btfsc	___lwmod@divisor+1,7
   775     026D  2A78               	goto	l734
   776     026E  3001               	movlw	1
   777     026F                     u405:
   778     026F  1003               	clrc
   779     0270  0DCD               	rlf	___lwmod@divisor,f
   780     0271  0DCE               	rlf	___lwmod@divisor+1,f
   781     0272  3EFF               	addlw	-1
   782     0273  1D03               	skipz
   783     0274  2A6F               	goto	u405
   784     0275  3001               	movlw	1
   785     0276  07D1               	addwf	___lwmod@counter,f
   786     0277  2A6C               	goto	l732
   787     0278                     l734:
   788     0278  084E               	movf	___lwmod@divisor+1,w
   789     0279  0250               	subwf	___lwmod@dividend+1,w
   790     027A  1D03               	skipz
   791     027B  2A7E               	goto	u425
   792     027C  084D               	movf	___lwmod@divisor,w
   793     027D  024F               	subwf	___lwmod@dividend,w
   794     027E                     u425:
   795     027E  1C03               	skipc
   796     027F  2A86               	goto	l738
   797     0280  084D               	movf	___lwmod@divisor,w
   798     0281  02CF               	subwf	___lwmod@dividend,f
   799     0282  084E               	movf	___lwmod@divisor+1,w
   800     0283  1C03               	skipc
   801     0284  03D0               	decf	___lwmod@dividend+1,f
   802     0285  02D0               	subwf	___lwmod@dividend+1,f
   803     0286                     l738:
   804     0286  3001               	movlw	1
   805     0287                     u435:
   806     0287  1003               	clrc
   807     0288  0CCE               	rrf	___lwmod@divisor+1,f
   808     0289  0CCD               	rrf	___lwmod@divisor,f
   809     028A  3EFF               	addlw	-1
   810     028B  1D03               	skipz
   811     028C  2A87               	goto	u435
   812     028D  3001               	movlw	1
   813     028E  02D1               	subwf	___lwmod@counter,f
   814     028F  1D03               	btfss	3,2
   815     0290  2A78               	goto	l734
   816     0291                     l742:
   817     0291  0850               	movf	___lwmod@dividend+1,w
   818     0292  00CE               	movwf	?___lwmod+1
   819     0293  084F               	movf	___lwmod@dividend,w
   820     0294  00CD               	movwf	?___lwmod
   821     0295  0008               	return
   822     0296                     __end_of___lwmod:
   823                           
   824                           	psect	text3
   825     0296                     __ptext3:	
   826 ;; *************** function ___lwdiv *****************
   827 ;; Defined at:
   828 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  divisor         2    6[COMMON] unsigned int 
   831 ;;  dividend        2    8[COMMON] unsigned int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  quotient        2   10[COMMON] unsigned int 
   834 ;;  counter         1   12[COMMON] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  2    6[COMMON] unsigned int 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/100
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1
   844 ;;      Params:         4       0       0
   845 ;;      Locals:         3       0       0
   846 ;;      Temps:          0       0       0
   847 ;;      Totals:         7       0       0
   848 ;;Total ram usage:        7 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_actualizarPantalla
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858     0296                     ___lwdiv:	
   859                           ;psect for function ___lwdiv
   860                           
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   864     0296  01CA               	clrf	___lwdiv@quotient
   865     0297  01CB               	clrf	___lwdiv@quotient+1
   866     0298  0846               	movf	___lwdiv@divisor,w
   867     0299  0447               	iorwf	___lwdiv@divisor+1,w
   868     029A  1903               	btfsc	3,2
   869     029B  2ACB               	goto	l720
   870     029C  3001               	movlw	1
   871     029D  00CC               	movwf	___lwdiv@counter
   872     029E                     l708:
   873     029E  1BC7               	btfsc	___lwdiv@divisor+1,7
   874     029F  2AAA               	goto	l710
   875     02A0  3001               	movlw	1
   876     02A1                     u335:
   877     02A1  1003               	clrc
   878     02A2  0DC6               	rlf	___lwdiv@divisor,f
   879     02A3  0DC7               	rlf	___lwdiv@divisor+1,f
   880     02A4  3EFF               	addlw	-1
   881     02A5  1D03               	skipz
   882     02A6  2AA1               	goto	u335
   883     02A7  3001               	movlw	1
   884     02A8  07CC               	addwf	___lwdiv@counter,f
   885     02A9  2A9E               	goto	l708
   886     02AA                     l710:
   887     02AA  3001               	movlw	1
   888     02AB                     u355:
   889     02AB  1003               	clrc
   890     02AC  0DCA               	rlf	___lwdiv@quotient,f
   891     02AD  0DCB               	rlf	___lwdiv@quotient+1,f
   892     02AE  3EFF               	addlw	-1
   893     02AF  1D03               	skipz
   894     02B0  2AAB               	goto	u355
   895     02B1  0847               	movf	___lwdiv@divisor+1,w
   896     02B2  0249               	subwf	___lwdiv@dividend+1,w
   897     02B3  1D03               	skipz
   898     02B4  2AB7               	goto	u365
   899     02B5  0846               	movf	___lwdiv@divisor,w
   900     02B6  0248               	subwf	___lwdiv@dividend,w
   901     02B7                     u365:
   902     02B7  1C03               	skipc
   903     02B8  2AC0               	goto	l716
   904     02B9  0846               	movf	___lwdiv@divisor,w
   905     02BA  02C8               	subwf	___lwdiv@dividend,f
   906     02BB  0847               	movf	___lwdiv@divisor+1,w
   907     02BC  1C03               	skipc
   908     02BD  03C9               	decf	___lwdiv@dividend+1,f
   909     02BE  02C9               	subwf	___lwdiv@dividend+1,f
   910     02BF  144A               	bsf	___lwdiv@quotient,0
   911     02C0                     l716:
   912     02C0  3001               	movlw	1
   913     02C1                     u375:
   914     02C1  1003               	clrc
   915     02C2  0CC7               	rrf	___lwdiv@divisor+1,f
   916     02C3  0CC6               	rrf	___lwdiv@divisor,f
   917     02C4  3EFF               	addlw	-1
   918     02C5  1D03               	skipz
   919     02C6  2AC1               	goto	u375
   920     02C7  3001               	movlw	1
   921     02C8  02CC               	subwf	___lwdiv@counter,f
   922     02C9  1D03               	btfss	3,2
   923     02CA  2AAA               	goto	l710
   924     02CB                     l720:
   925     02CB  084B               	movf	___lwdiv@quotient+1,w
   926     02CC  00C7               	movwf	?___lwdiv+1
   927     02CD  084A               	movf	___lwdiv@quotient,w
   928     02CE  00C6               	movwf	?___lwdiv
   929     02CF  0008               	return
   930     02D0                     __end_of___lwdiv:
   931                           
   932                           	psect	text4
   933     0245                     __ptext4:	
   934 ;; *************** function ___wmul *****************
   935 ;; Defined at:
   936 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  multiplier      2    0[COMMON] unsigned int 
   939 ;;  multiplicand    2    2[COMMON] unsigned int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  product         2    4[COMMON] unsigned int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    0[COMMON] unsigned int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 300/100
   948 ;;		On exit  : 300/100
   949 ;;		Unchanged: 300/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1
   951 ;;      Params:         4       0       0
   952 ;;      Locals:         2       0       0
   953 ;;      Temps:          0       0       0
   954 ;;      Totals:         6       0       0
   955 ;;Total ram usage:        6 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964     0245                     ___wmul:	
   965                           ;psect for function ___wmul
   966                           
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   970     0245  01C4               	clrf	___wmul@product
   971     0246  01C5               	clrf	___wmul@product+1
   972     0247                     l780:
   973     0247  1C40               	btfss	___wmul@multiplier,0
   974     0248  2A4F               	goto	l120
   975     0249  0842               	movf	___wmul@multiplicand,w
   976     024A  07C4               	addwf	___wmul@product,f
   977     024B  1803               	skipnc
   978     024C  0AC5               	incf	___wmul@product+1,f
   979     024D  0843               	movf	___wmul@multiplicand+1,w
   980     024E  07C5               	addwf	___wmul@product+1,f
   981     024F                     l120:
   982     024F  3001               	movlw	1
   983     0250                     u595:
   984     0250  1003               	clrc
   985     0251  0DC2               	rlf	___wmul@multiplicand,f
   986     0252  0DC3               	rlf	___wmul@multiplicand+1,f
   987     0253  3EFF               	addlw	-1
   988     0254  1D03               	skipz
   989     0255  2A50               	goto	u595
   990     0256  3001               	movlw	1
   991     0257                     u605:
   992     0257  1003               	clrc
   993     0258  0CC1               	rrf	___wmul@multiplier+1,f
   994     0259  0CC0               	rrf	___wmul@multiplier,f
   995     025A  3EFF               	addlw	-1
   996     025B  1D03               	skipz
   997     025C  2A57               	goto	u605
   998     025D  0840               	movf	___wmul@multiplier,w
   999     025E  0441               	iorwf	___wmul@multiplier+1,w
  1000     025F  1D03               	btfss	3,2
  1001     0260  2A47               	goto	l780
  1002     0261  0845               	movf	___wmul@product+1,w
  1003     0262  00C1               	movwf	?___wmul+1
  1004     0263  0844               	movf	___wmul@product,w
  1005     0264  00C0               	movwf	?___wmul
  1006     0265  0008               	return
  1007     0266                     __end_of___wmul:
  1008     0000                     ___latbits      equ	0
  1009     007E                     btemp           set	126	;btemp
  1010     007E                     wtemp0          set	126
  1011                           
  1012                           	psect	config
  1013                           
  1014                           ;Config register CONFIG @ 0x2007
  1015                           ;	Oscillator Selection bits
  1016                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1017                           ;	Watchdog Timer Enable bit
  1018                           ;	WDTE = OFF, WDT disabled
  1019                           ;	Power-up Timer Enable bit
  1020                           ;	PWRTE = OFF, PWRT disabled
  1021                           ;	RA5/MCLR/VPP Pin Function Select bit
  1022                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1023                           ;	Brown-out Reset Enable bit
  1024                           ;	BOREN = OFF, BOR disabled
  1025                           ;	Low-Voltage Programming Enable bit
  1026                           ;	LVP = OFF, RB3/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1027                           ;	Data EE Memory Code Protection bit
  1028                           ;	CPD = OFF, Code protection off
  1029                           ;	Flash Program Memory Write Enable bits
  1030                           ;	WRT = OFF, Write protection off
  1031                           ;	In-Circuit Debugger Mode bit
  1032                           ;	DEBUG = 0x1, unprogrammed default
  1033                           ;	CCP1 Pin Selection bit
  1034                           ;	CCPMX = RB2, CCP1 function on RB2
  1035                           ;	Flash Program Memory Code Protection bit
  1036                           ;	CP = OFF, Code protection off
  1037     2007                     	org	8199
  1038     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           62     38      38
    BANK0            32      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_actualizarPantalla
    _actualizarPantalla->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1146
                                             33 COMMON     5     5      0
                            ___lwdiv
                             ___wmul
                 _actualizarPantalla
 ---------------------------------------------------------------------------------
 (1) _actualizarPantalla                                  15    13      2     834
                                             18 COMMON    15    13      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                             13 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     170
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _actualizarPantalla
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           62      0       0      0.0%
BITBANK0            32      0       0      0.0%
BITBANK1            32      0       0      0.0%
COMMON              62     38      38     61.3%
BANK0               32      0       0      0.0%
BANK1               32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      38      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Dec 20 12:44:37 2024

            ___wmul@multiplicand 0042                              l120 024F                              l710 02AA  
                            l720 02CB                              l810 02F2                              l716 02C0  
                            l708 029E                              l732 026C                              l734 0278  
                            l742 0291                              l760 035B                              l808 02E6  
                            l738 0286                              l770 03D8                              l780 0247  
                            l772 03E3                              l764 03B6                              l766 03C2  
                            l768 03CD                              l798 02D6                              u405 026F  
                            u510 03CA                              u335 02A1                              u425 027E  
                            u530 03D5                              u355 02AB                              u435 0287  
                            u605 0257                              u365 02B7                              u550 03E0  
                            u470 03B3                              u375 02C1                              u455 0383  
                            u465 039A                              u490 03BF                              u637 02D8  
                            u575 03FB                              u647 02EC                              u657 03E7  
                            u595 0250                              fsr0 0004                              indf 0000  
                           _main 02D0                             btemp 007E                             start 0000  
                          ?_main 0040                  __end_of___lwdiv 02D0                  __end_of___lwmod 0296  
                          _TRISB 0086       __end_of_actualizarPantalla 03FE                            status 0003  
                          wtemp0 007E                    main@adc_value 0062                  __initialization 03FE  
                   __end_of_main 0313                           ??_main 0061                           _ADCON0 001F  
                         _ADCON1 009F                           _ADRESH 001E                           _ADRESL 009E  
                         ___wmul 0245                        ??___lwdiv 004A                        ??___lwmod 0051  
        __end_of__initialization 03FE                   __pcstackCOMMON 0040                       __pmaintext 02D0  
                        ?___wmul 0040               _actualizarPantalla 0313              ?_actualizarPantalla 0052  
                        ___lwdiv 0296                          ___lwmod 0266                          __ptext1 0313  
                        __ptext2 0266                          __ptext3 0296                          __ptext4 0245  
           ??_actualizarPantalla 0054             end_of_initialization 03FE                        _PORTAbits 0005  
                      _PORTBbits 0006                        _TRISAbits 0085                   main@voltage_mv 0064  
                 __end_of___wmul 0266              start_initialization 03FE                         ??___wmul 0044  
                      ___latbits 0000                 ___lwdiv@dividend 0048                         ?___lwdiv 0046  
                       ?___lwmod 004D  actualizarPantalla@display_value 0052                 ___lwdiv@quotient 004A  
       actualizarPantalla@digits 0057                   ___wmul@product 0044                ___wmul@multiplier 0040  
                ___lwdiv@divisor 0046              actualizarPantalla@i 005F                  ___lwdiv@counter 004C  
               ___lwmod@dividend 004F                  ___lwmod@divisor 004D                  ___lwmod@counter 0051  
