

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Dec 20 12:44:36 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F818
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F818 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     001E                     ADRESH          equ	30	;# 
    80     001F                     ADCON0          equ	31	;# 
    81     0081                     OPTION_REG      equ	129	;# 
    82     0085                     TRISA           equ	133	;# 
    83     0086                     TRISB           equ	134	;# 
    84     008C                     PIE1            equ	140	;# 
    85     008D                     PIE2            equ	141	;# 
    86     008E                     PCON            equ	142	;# 
    87     008F                     OSCCON          equ	143	;# 
    88     0090                     OSCTUNE         equ	144	;# 
    89     0092                     PR2             equ	146	;# 
    90     0093                     SSPADD          equ	147	;# 
    91     0094                     SSPSTAT         equ	148	;# 
    92     009E                     ADRESL          equ	158	;# 
    93     009F                     ADCON1          equ	159	;# 
    94     010C                     EEDATA          equ	268	;# 
    95     010D                     EEADR           equ	269	;# 
    96     010E                     EEDATH          equ	270	;# 
    97     010F                     EEADRH          equ	271	;# 
    98     018C                     EECON1          equ	396	;# 
    99     018D                     EECON2          equ	397	;# 
   100     0000                     INDF            equ	0	;# 
   101     0001                     TMR0            equ	1	;# 
   102     0002                     PCL             equ	2	;# 
   103     0003                     STATUS          equ	3	;# 
   104     0004                     FSR             equ	4	;# 
   105     0005                     PORTA           equ	5	;# 
   106     0006                     PORTB           equ	6	;# 
   107     000A                     PCLATH          equ	10	;# 
   108     000B                     INTCON          equ	11	;# 
   109     000C                     PIR1            equ	12	;# 
   110     000D                     PIR2            equ	13	;# 
   111     000E                     TMR1            equ	14	;# 
   112     000E                     TMR1L           equ	14	;# 
   113     000F                     TMR1H           equ	15	;# 
   114     0010                     T1CON           equ	16	;# 
   115     0011                     TMR2            equ	17	;# 
   116     0012                     T2CON           equ	18	;# 
   117     0013                     SSPBUF          equ	19	;# 
   118     0014                     SSPCON          equ	20	;# 
   119     0015                     CCPR1           equ	21	;# 
   120     0015                     CCPR1L          equ	21	;# 
   121     0016                     CCPR1H          equ	22	;# 
   122     0017                     CCP1CON         equ	23	;# 
   123     001E                     ADRESH          equ	30	;# 
   124     001F                     ADCON0          equ	31	;# 
   125     0081                     OPTION_REG      equ	129	;# 
   126     0085                     TRISA           equ	133	;# 
   127     0086                     TRISB           equ	134	;# 
   128     008C                     PIE1            equ	140	;# 
   129     008D                     PIE2            equ	141	;# 
   130     008E                     PCON            equ	142	;# 
   131     008F                     OSCCON          equ	143	;# 
   132     0090                     OSCTUNE         equ	144	;# 
   133     0092                     PR2             equ	146	;# 
   134     0093                     SSPADD          equ	147	;# 
   135     0094                     SSPSTAT         equ	148	;# 
   136     009E                     ADRESL          equ	158	;# 
   137     009F                     ADCON1          equ	159	;# 
   138     010C                     EEDATA          equ	268	;# 
   139     010D                     EEADR           equ	269	;# 
   140     010E                     EEDATH          equ	270	;# 
   141     010F                     EEADRH          equ	271	;# 
   142     018C                     EECON1          equ	396	;# 
   143     018D                     EECON2          equ	397	;# 
   144     001E                     _ADRESH         set	30
   145     001F                     _ADCON0         set	31
   146     0005                     _PORTAbits      set	5
   147     0006                     _PORTBbits      set	6
   148     009E                     _ADRESL         set	158
   149     009F                     _ADCON1         set	159
   150     0085                     _TRISAbits      set	133
   151     0086                     _TRISB          set	134
   152                           
   153                           	psect	cinit
   154     03FE                     start_initialization:	
   155                           ; #config settings
   156                           
   157     03FE                     __initialization:
   158     03FE                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161     03FE                     __end_of__initialization:
   162     03FE  0183               	clrf	3
   163     03FF  2ABE               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	cstackCOMMON
   166     0040                     __pcstackCOMMON:
   167     0040                     ?_main:
   168     0040                     ?___wmul:	
   169                           ; 1 bytes @ 0x0
   170                           
   171     0040                     ___wmul@multiplier:	
   172                           ; 2 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176     0040                     	ds	2
   177     0042                     ___wmul@multiplicand:
   178                           
   179                           ; 2 bytes @ 0x2
   180     0042                     	ds	2
   181     0044                     ___wmul@product:
   182     0044                     ??___wmul:	
   183                           ; 2 bytes @ 0x4
   184                           
   185                           
   186                           ; 1 bytes @ 0x4
   187     0044                     	ds	2
   188     0046                     ?___lwdiv:
   189     0046                     ___lwdiv@divisor:	
   190                           ; 2 bytes @ 0x6
   191                           
   192                           
   193                           ; 2 bytes @ 0x6
   194     0046                     	ds	2
   195     0048                     ___lwdiv@dividend:
   196                           
   197                           ; 2 bytes @ 0x8
   198     0048                     	ds	2
   199     004A                     ___lwdiv@quotient:
   200     004A                     ??___lwdiv:	
   201                           ; 2 bytes @ 0xA
   202                           
   203                           
   204                           ; 1 bytes @ 0xA
   205     004A                     	ds	2
   206     004C                     ___lwdiv@counter:
   207                           
   208                           ; 1 bytes @ 0xC
   209     004C                     	ds	1
   210     004D                     ?___lwmod:
   211     004D                     ___lwmod@divisor:	
   212                           ; 2 bytes @ 0xD
   213                           
   214                           
   215                           ; 2 bytes @ 0xD
   216     004D                     	ds	2
   217     004F                     ___lwmod@dividend:
   218                           
   219                           ; 2 bytes @ 0xF
   220     004F                     	ds	2
   221     0051                     ___lwmod@counter:
   222     0051                     ??___lwmod:	
   223                           ; 1 bytes @ 0x11
   224                           
   225                           
   226                           ; 1 bytes @ 0x11
   227     0051                     	ds	1
   228     0052                     ?_actualizarPantalla:
   229     0052                     actualizarPantalla@display_value:	
   230                           ; 1 bytes @ 0x12
   231                           
   232                           
   233                           ; 2 bytes @ 0x12
   234     0052                     	ds	2
   235     0054                     ??_actualizarPantalla:
   236                           
   237                           ; 1 bytes @ 0x14
   238     0054                     	ds	4
   239     0058                     actualizarPantalla@digits:
   240                           
   241                           ; 8 bytes @ 0x18
   242     0058                     	ds	8
   243     0060                     actualizarPantalla@i:
   244                           
   245                           ; 2 bytes @ 0x20
   246     0060                     	ds	2
   247     0062                     ??_main:
   248                           
   249                           ; 1 bytes @ 0x22
   250     0062                     	ds	1
   251     0063                     main@adc_value:
   252                           
   253                           ; 2 bytes @ 0x23
   254     0063                     	ds	2
   255     0065                     main@voltage_mv:
   256                           
   257                           ; 2 bytes @ 0x25
   258     0065                     	ds	2
   259                           
   260                           	psect	maintext
   261     02BE                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 52 in file "../main_adc.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  voltage_mv      2   37[COMMON] unsigned int 
   272 ;;  adc_value       2   35[COMMON] unsigned int 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1
   282 ;;      Params:         0       0       0
   283 ;;      Locals:         4       0       0
   284 ;;      Temps:          1       0       0
   285 ;;      Totals:         5       0       0
   286 ;;Total ram usage:        5 bytes
   287 ;; Hardware stack levels required when called: 2
   288 ;; This function calls:
   289 ;;		___lwdiv
   290 ;;		___wmul
   291 ;;		_actualizarPantalla
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     02BE                     _main:	
   298                           ;psect for function _main
   299                           
   300                           
   301                           ;../main_adc.c: 54:     unsigned int voltage_mv = 0;
   302                           
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   305     02BE  01E5               	clrf	main@voltage_mv
   306     02BF  01E6               	clrf	main@voltage_mv+1
   307                           
   308                           ;../main_adc.c: 56:     TRISB = 0x00;
   309     02C0  1683               	bsf	3,5	;RP0=1, select bank1
   310     02C1  1303               	bcf	3,6	;RP1=0, select bank1
   311     02C2  0186               	clrf	6	;volatile
   312                           
   313                           ;../main_adc.c: 57:     TRISAbits.TRISA2 = 0;
   314     02C3  1105               	bcf	5,2	;volatile
   315                           
   316                           ;../main_adc.c: 58:     TRISAbits.TRISA0 = 1;
   317     02C4  1405               	bsf	5,0	;volatile
   318     02C5                     l798:
   319                           
   320                           ;../main_adc.c: 61:     _delay((unsigned long)((10)*(500000/4000.0)));
   321     02C5  30F9               	movlw	249
   322     02C6  00E2               	movwf	??_main
   323     02C7                     u597:
   324     02C7  2AC8               	nop2
   325     02C8  0BE2               	decfsz	??_main,f
   326     02C9  2AC7               	goto	u597
   327     02CA  2ACB               	nop2
   328     02CB  2ACC               	nop2
   329                           
   330                           ;../main_adc.c: 65:         ADCON0 = 0b01000001;
   331     02CC  3041               	movlw	65
   332     02CD  1283               	bcf	3,5	;RP0=0, select bank0
   333     02CE  1303               	bcf	3,6	;RP1=0, select bank0
   334     02CF  009F               	movwf	31	;volatile
   335                           
   336                           ;../main_adc.c: 66:         ADCON1 = 0b10001110;
   337     02D0  308E               	movlw	142
   338     02D1  1683               	bsf	3,5	;RP0=1, select bank1
   339     02D2  1303               	bcf	3,6	;RP1=0, select bank1
   340     02D3  009F               	movwf	31	;volatile
   341                           
   342                           ;../main_adc.c: 68:         ADCON0 |= 0b00000100;
   343     02D4  1283               	bcf	3,5	;RP0=0, select bank0
   344     02D5  1303               	bcf	3,6	;RP1=0, select bank0
   345     02D6  151F               	bsf	31,2	;volatile
   346     02D7                     l808:	
   347                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   348                           
   349                           
   350                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   351     02D7  1283               	bcf	3,5	;RP0=0, select bank0
   352     02D8  1303               	bcf	3,6	;RP1=0, select bank0
   353     02D9  1D1F               	btfss	31,2	;volatile
   354     02DA  2AE3               	goto	l810
   355                           
   356                           ;../main_adc.c: 70:             _delay((unsigned long)((10)*(500000/4000.0)));
   357     02DB  30F9               	movlw	249
   358     02DC  00E2               	movwf	??_main
   359     02DD                     u607:
   360     02DD  2ADE               	nop2
   361     02DE  0BE2               	decfsz	??_main,f
   362     02DF  2ADD               	goto	u607
   363     02E0  2AE1               	nop2
   364     02E1  2AE2               	nop2
   365     02E2  2AD7               	goto	l808
   366     02E3                     l810:
   367                           
   368                           ;../main_adc.c: 74:         adc_value = (unsigned int)( (ADRESH << 8) | ADRESL );
   369     02E3  081E               	movf	30,w	;volatile
   370     02E4  00E4               	movwf	main@adc_value+1
   371     02E5  1683               	bsf	3,5	;RP0=1, select bank1
   372     02E6  1303               	bcf	3,6	;RP1=0, select bank1
   373     02E7  081E               	movf	30,w	;volatile
   374     02E8  00E3               	movwf	main@adc_value
   375                           
   376                           ;../main_adc.c: 77:         voltage_mv = ((unsigned int)adc_value * 5000) / 1023;
   377     02E9  30FF               	movlw	255
   378     02EA  00C6               	movwf	___lwdiv@divisor
   379     02EB  3003               	movlw	3
   380     02EC  00C7               	movwf	___lwdiv@divisor+1
   381     02ED  0864               	movf	main@adc_value+1,w
   382     02EE  00C1               	movwf	___wmul@multiplier+1
   383     02EF  0863               	movf	main@adc_value,w
   384     02F0  00C0               	movwf	___wmul@multiplier
   385     02F1  3088               	movlw	136
   386     02F2  00C2               	movwf	___wmul@multiplicand
   387     02F3  3013               	movlw	19
   388     02F4  00C3               	movwf	___wmul@multiplicand+1
   389     02F5  2233               	fcall	___wmul
   390     02F6  0841               	movf	?___wmul+1,w
   391     02F7  00C9               	movwf	___lwdiv@dividend+1
   392     02F8  0840               	movf	?___wmul,w
   393     02F9  00C8               	movwf	___lwdiv@dividend
   394     02FA  2284               	fcall	___lwdiv
   395     02FB  0847               	movf	?___lwdiv+1,w
   396     02FC  00E6               	movwf	main@voltage_mv+1
   397     02FD  0846               	movf	?___lwdiv,w
   398     02FE  00E5               	movwf	main@voltage_mv
   399                           
   400                           ;../main_adc.c: 80:         actualizarPantalla(voltage_mv);
   401     02FF  0866               	movf	main@voltage_mv+1,w
   402     0300  00D3               	movwf	actualizarPantalla@display_value+1
   403     0301  0865               	movf	main@voltage_mv,w
   404     0302  00D2               	movwf	actualizarPantalla@display_value
   405     0303  2305               	fcall	_actualizarPantalla
   406     0304  2AC5               	goto	l798
   407     0305                     __end_of_main:
   408                           
   409                           	psect	text1
   410     0305                     __ptext1:	
   411 ;; *************** function _actualizarPantalla *****************
   412 ;; Defined at:
   413 ;;		line 25 in file "../main_adc.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  display_valu    2   18[COMMON] unsigned int 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  digits          8   24[COMMON] int [4]
   418 ;;  i               2   32[COMMON] int 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1
   428 ;;      Params:         2       0       0
   429 ;;      Locals:        10       0       0
   430 ;;      Temps:          4       0       0
   431 ;;      Totals:        16       0       0
   432 ;;Total ram usage:       16 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; Hardware stack levels required when called: 1
   435 ;; This function calls:
   436 ;;		___lwdiv
   437 ;;		___lwmod
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443     0305                     _actualizarPantalla:	
   444                           ;psect for function _actualizarPantalla
   445                           
   446                           
   447                           ;../main_adc.c: 28:     digits[0] = display_value / 1000;
   448                           
   449                           ;incstack = 0
   450                           ; Regs used in _actualizarPantalla: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   451     0305  30E8               	movlw	232
   452     0306  00C6               	movwf	___lwdiv@divisor
   453     0307  3003               	movlw	3
   454     0308  00C7               	movwf	___lwdiv@divisor+1
   455     0309  0853               	movf	actualizarPantalla@display_value+1,w
   456     030A  00C9               	movwf	___lwdiv@dividend+1
   457     030B  0852               	movf	actualizarPantalla@display_value,w
   458     030C  00C8               	movwf	___lwdiv@dividend
   459     030D  2284               	fcall	___lwdiv
   460     030E  0847               	movf	?___lwdiv+1,w
   461     030F  00D9               	movwf	actualizarPantalla@digits+1
   462     0310  0846               	movf	?___lwdiv,w
   463     0311  00D8               	movwf	actualizarPantalla@digits
   464                           
   465                           ;../main_adc.c: 29:     digits[1] = (display_value / 100) % 10;
   466     0312  300A               	movlw	10
   467     0313  00CD               	movwf	___lwmod@divisor
   468     0314  3000               	movlw	0
   469     0315  00CE               	movwf	___lwmod@divisor+1
   470     0316  3064               	movlw	100
   471     0317  00C6               	movwf	___lwdiv@divisor
   472     0318  3000               	movlw	0
   473     0319  00C7               	movwf	___lwdiv@divisor+1
   474     031A  0853               	movf	actualizarPantalla@display_value+1,w
   475     031B  00C9               	movwf	___lwdiv@dividend+1
   476     031C  0852               	movf	actualizarPantalla@display_value,w
   477     031D  00C8               	movwf	___lwdiv@dividend
   478     031E  2284               	fcall	___lwdiv
   479     031F  0847               	movf	?___lwdiv+1,w
   480     0320  00D0               	movwf	___lwmod@dividend+1
   481     0321  0846               	movf	?___lwdiv,w
   482     0322  00CF               	movwf	___lwmod@dividend
   483     0323  2254               	fcall	___lwmod
   484     0324  084E               	movf	?___lwmod+1,w
   485     0325  00DB               	movwf	actualizarPantalla@digits+3
   486     0326  084D               	movf	?___lwmod,w
   487     0327  00DA               	movwf	actualizarPantalla@digits+2
   488                           
   489                           ;../main_adc.c: 30:     digits[2] = (display_value / 10) % 10;
   490     0328  300A               	movlw	10
   491     0329  00CD               	movwf	___lwmod@divisor
   492     032A  3000               	movlw	0
   493     032B  00CE               	movwf	___lwmod@divisor+1
   494     032C  300A               	movlw	10
   495     032D  00C6               	movwf	___lwdiv@divisor
   496     032E  3000               	movlw	0
   497     032F  00C7               	movwf	___lwdiv@divisor+1
   498     0330  0853               	movf	actualizarPantalla@display_value+1,w
   499     0331  00C9               	movwf	___lwdiv@dividend+1
   500     0332  0852               	movf	actualizarPantalla@display_value,w
   501     0333  00C8               	movwf	___lwdiv@dividend
   502     0334  2284               	fcall	___lwdiv
   503     0335  0847               	movf	?___lwdiv+1,w
   504     0336  00D0               	movwf	___lwmod@dividend+1
   505     0337  0846               	movf	?___lwdiv,w
   506     0338  00CF               	movwf	___lwmod@dividend
   507     0339  2254               	fcall	___lwmod
   508     033A  084E               	movf	?___lwmod+1,w
   509     033B  00DD               	movwf	actualizarPantalla@digits+5
   510     033C  084D               	movf	?___lwmod,w
   511     033D  00DC               	movwf	actualizarPantalla@digits+4
   512                           
   513                           ;../main_adc.c: 31:     digits[3] = display_value % 10;
   514     033E  300A               	movlw	10
   515     033F  00CD               	movwf	___lwmod@divisor
   516     0340  3000               	movlw	0
   517     0341  00CE               	movwf	___lwmod@divisor+1
   518     0342  0853               	movf	actualizarPantalla@display_value+1,w
   519     0343  00D0               	movwf	___lwmod@dividend+1
   520     0344  0852               	movf	actualizarPantalla@display_value,w
   521     0345  00CF               	movwf	___lwmod@dividend
   522     0346  2254               	fcall	___lwmod
   523     0347  084E               	movf	?___lwmod+1,w
   524     0348  00DF               	movwf	actualizarPantalla@digits+7
   525     0349  084D               	movf	?___lwmod,w
   526     034A  00DE               	movwf	actualizarPantalla@digits+6
   527                           
   528                           ;../main_adc.c: 33:     for (i = 0; i < 4; i++) {
   529     034B  01E0               	clrf	actualizarPantalla@i
   530     034C  01E1               	clrf	actualizarPantalla@i+1
   531     034D                     l760:
   532                           
   533                           ;../main_adc.c: 34:         PORTBbits.RB0 = (digits[i] >> 0) & 0x01;
   534     034D  0860               	movf	actualizarPantalla@i,w
   535     034E  00D4               	movwf	??_actualizarPantalla
   536     034F  0754               	addwf	??_actualizarPantalla,w
   537     0350  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   538     0351  0084               	movwf	4
   539     0352  3001               	movlw	1
   540     0353  0500               	andwf	0,w
   541     0354  00D5               	movwf	??_actualizarPantalla+1
   542     0355  1283               	bcf	3,5	;RP0=0, select bank0
   543     0356  1303               	bcf	3,6	;RP1=0, select bank0
   544     0357  0806               	movf	6,w	;volatile
   545     0358  0655               	xorwf	??_actualizarPantalla+1,w
   546     0359  39FE               	andlw	-2
   547     035A  0655               	xorwf	??_actualizarPantalla+1,w
   548     035B  0086               	movwf	6	;volatile
   549                           
   550                           ;../main_adc.c: 35:         PORTBbits.RB1 = (digits[i] >> 1) & 0x01;
   551     035C  0860               	movf	actualizarPantalla@i,w
   552     035D  00D4               	movwf	??_actualizarPantalla
   553     035E  0754               	addwf	??_actualizarPantalla,w
   554     035F  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   555     0360  0084               	movwf	4
   556     0361  0800               	movf	0,w
   557     0362  00D5               	movwf	??_actualizarPantalla+1
   558     0363  0A84               	incf	4,f
   559     0364  0800               	movf	0,w
   560     0365  00D6               	movwf	??_actualizarPantalla+2
   561     0366  0D56               	rlf	??_actualizarPantalla+2,w
   562     0367  0CD6               	rrf	??_actualizarPantalla+2,f
   563     0368  0CD5               	rrf	??_actualizarPantalla+1,f
   564     0369  0855               	movf	??_actualizarPantalla+1,w
   565     036A  3901               	andlw	1
   566     036B  00D7               	movwf	??_actualizarPantalla+3
   567     036C  0DD7               	rlf	??_actualizarPantalla+3,f
   568     036D  0806               	movf	6,w	;volatile
   569     036E  0657               	xorwf	??_actualizarPantalla+3,w
   570     036F  39FD               	andlw	-3
   571     0370  0657               	xorwf	??_actualizarPantalla+3,w
   572     0371  0086               	movwf	6	;volatile
   573                           
   574                           ;../main_adc.c: 36:         PORTBbits.RB2 = (digits[i] >> 2) & 0x01;
   575     0372  0860               	movf	actualizarPantalla@i,w
   576     0373  00D4               	movwf	??_actualizarPantalla
   577     0374  0754               	addwf	??_actualizarPantalla,w
   578     0375  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   579     0376  0084               	movwf	4
   580     0377  0800               	movf	0,w
   581     0378  00D5               	movwf	??_actualizarPantalla+1
   582     0379  0A84               	incf	4,f
   583     037A  0800               	movf	0,w
   584     037B  00D6               	movwf	??_actualizarPantalla+2
   585     037C  0D56               	rlf	??_actualizarPantalla+2,w
   586     037D  0CD6               	rrf	??_actualizarPantalla+2,f
   587     037E  0CD5               	rrf	??_actualizarPantalla+1,f
   588     037F  0D56               	rlf	??_actualizarPantalla+2,w
   589     0380  0CD6               	rrf	??_actualizarPantalla+2,f
   590     0381  0CD5               	rrf	??_actualizarPantalla+1,f
   591     0382  0855               	movf	??_actualizarPantalla+1,w
   592     0383  3901               	andlw	1
   593     0384  00D7               	movwf	??_actualizarPantalla+3
   594     0385  0DD7               	rlf	??_actualizarPantalla+3,f
   595     0386  0DD7               	rlf	??_actualizarPantalla+3,f
   596     0387  0806               	movf	6,w	;volatile
   597     0388  0657               	xorwf	??_actualizarPantalla+3,w
   598     0389  39FB               	andlw	-5
   599     038A  0657               	xorwf	??_actualizarPantalla+3,w
   600     038B  0086               	movwf	6	;volatile
   601                           
   602                           ;../main_adc.c: 37:         PORTBbits.RB3 = (digits[i] >> 3) & 0x01;
   603     038C  0860               	movf	actualizarPantalla@i,w
   604     038D  00D4               	movwf	??_actualizarPantalla
   605     038E  0754               	addwf	??_actualizarPantalla,w
   606     038F  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   607     0390  0084               	movwf	4
   608     0391  0800               	movf	0,w
   609     0392  00D5               	movwf	??_actualizarPantalla+1
   610     0393  0A84               	incf	4,f
   611     0394  0800               	movf	0,w
   612     0395  00D6               	movwf	??_actualizarPantalla+2
   613     0396  0D56               	rlf	??_actualizarPantalla+2,w
   614     0397  0CD6               	rrf	??_actualizarPantalla+2,f
   615     0398  0CD5               	rrf	??_actualizarPantalla+1,f
   616     0399  0D56               	rlf	??_actualizarPantalla+2,w
   617     039A  0CD6               	rrf	??_actualizarPantalla+2,f
   618     039B  0CD5               	rrf	??_actualizarPantalla+1,f
   619     039C  0D56               	rlf	??_actualizarPantalla+2,w
   620     039D  0CD6               	rrf	??_actualizarPantalla+2,f
   621     039E  0CD5               	rrf	??_actualizarPantalla+1,f
   622     039F  0855               	movf	??_actualizarPantalla+1,w
   623     03A0  3901               	andlw	1
   624     03A1  00D7               	movwf	??_actualizarPantalla+3
   625     03A2  0DD7               	rlf	??_actualizarPantalla+3,f
   626     03A3  0DD7               	rlf	??_actualizarPantalla+3,f
   627     03A4  0DD7               	rlf	??_actualizarPantalla+3,f
   628     03A5  0806               	movf	6,w	;volatile
   629     03A6  0657               	xorwf	??_actualizarPantalla+3,w
   630     03A7  39F7               	andlw	-9
   631     03A8  0657               	xorwf	??_actualizarPantalla+3,w
   632     03A9  0086               	movwf	6	;volatile
   633                           
   634                           ;../main_adc.c: 40:         PORTBbits.RB4 = (i == 3);
   635     03AA  3003               	movlw	3
   636     03AB  0660               	xorwf	actualizarPantalla@i,w
   637     03AC  0461               	iorwf	actualizarPantalla@i+1,w
   638     03AD  1D03               	btfss	3,2
   639     03AE  2BB3               	goto	u430
   640     03AF  1283               	bcf	3,5	;RP0=0, select bank0
   641     03B0  1303               	bcf	3,6	;RP1=0, select bank0
   642     03B1  1606               	bsf	6,4	;volatile
   643     03B2  2BB6               	goto	l764
   644     03B3                     u430:
   645     03B3  1283               	bcf	3,5	;RP0=0, select bank0
   646     03B4  1303               	bcf	3,6	;RP1=0, select bank0
   647     03B5  1206               	bcf	6,4	;volatile
   648     03B6                     l764:
   649                           
   650                           ;../main_adc.c: 41:         PORTBbits.RB5 = (i == 2);
   651     03B6  3002               	movlw	2
   652     03B7  0660               	xorwf	actualizarPantalla@i,w
   653     03B8  0461               	iorwf	actualizarPantalla@i+1,w
   654     03B9  1D03               	btfss	3,2
   655     03BA  2BBF               	goto	u450
   656     03BB  1283               	bcf	3,5	;RP0=0, select bank0
   657     03BC  1303               	bcf	3,6	;RP1=0, select bank0
   658     03BD  1686               	bsf	6,5	;volatile
   659     03BE  2BC2               	goto	l766
   660     03BF                     u450:
   661     03BF  1283               	bcf	3,5	;RP0=0, select bank0
   662     03C0  1303               	bcf	3,6	;RP1=0, select bank0
   663     03C1  1286               	bcf	6,5	;volatile
   664     03C2                     l766:
   665                           
   666                           ;../main_adc.c: 42:         PORTBbits.RB6 = (i == 1);
   667     03C2  0360               	decf	actualizarPantalla@i,w
   668     03C3  0461               	iorwf	actualizarPantalla@i+1,w
   669     03C4  1D03               	btfss	3,2
   670     03C5  2BCA               	goto	u470
   671     03C6  1283               	bcf	3,5	;RP0=0, select bank0
   672     03C7  1303               	bcf	3,6	;RP1=0, select bank0
   673     03C8  1706               	bsf	6,6	;volatile
   674     03C9  2BCD               	goto	l768
   675     03CA                     u470:
   676     03CA  1283               	bcf	3,5	;RP0=0, select bank0
   677     03CB  1303               	bcf	3,6	;RP1=0, select bank0
   678     03CC  1306               	bcf	6,6	;volatile
   679     03CD                     l768:
   680                           
   681                           ;../main_adc.c: 43:         PORTBbits.RB7 = (i == 0);
   682     03CD  0860               	movf	actualizarPantalla@i,w
   683     03CE  0461               	iorwf	actualizarPantalla@i+1,w
   684     03CF  1D03               	btfss	3,2
   685     03D0  2BD5               	goto	u490
   686     03D1  1283               	bcf	3,5	;RP0=0, select bank0
   687     03D2  1303               	bcf	3,6	;RP1=0, select bank0
   688     03D3  1786               	bsf	6,7	;volatile
   689     03D4  2BD8               	goto	l770
   690     03D5                     u490:
   691     03D5  1283               	bcf	3,5	;RP0=0, select bank0
   692     03D6  1303               	bcf	3,6	;RP1=0, select bank0
   693     03D7  1386               	bcf	6,7	;volatile
   694     03D8                     l770:
   695                           
   696                           ;../main_adc.c: 46:         PORTAbits.RA2 = (i != 0);
   697     03D8  0860               	movf	actualizarPantalla@i,w
   698     03D9  0461               	iorwf	actualizarPantalla@i+1,w
   699     03DA  1903               	btfsc	3,2
   700     03DB  2BE0               	goto	u510
   701     03DC  1283               	bcf	3,5	;RP0=0, select bank0
   702     03DD  1303               	bcf	3,6	;RP1=0, select bank0
   703     03DE  1505               	bsf	5,2	;volatile
   704     03DF  2BE3               	goto	l772
   705     03E0                     u510:
   706     03E0  1283               	bcf	3,5	;RP0=0, select bank0
   707     03E1  1303               	bcf	3,6	;RP1=0, select bank0
   708     03E2  1105               	bcf	5,2	;volatile
   709     03E3                     l772:
   710                           
   711                           ;../main_adc.c: 48:         _delay((unsigned long)((20)*(500000/4000.0)));
   712     03E3  3004               	movlw	4
   713     03E4  00D5               	movwf	??_actualizarPantalla+1
   714     03E5  303D               	movlw	61
   715     03E6  00D4               	movwf	??_actualizarPantalla
   716     03E7                     u617:
   717     03E7  0BD4               	decfsz	??_actualizarPantalla,f
   718     03E8  2BE7               	goto	u617
   719     03E9  0BD5               	decfsz	??_actualizarPantalla+1,f
   720     03EA  2BE7               	goto	u617
   721     03EB  2BEC               	nop2
   722                           
   723                           ;../main_adc.c: 49:     }
   724     03EC  3001               	movlw	1
   725     03ED  07E0               	addwf	actualizarPantalla@i,f
   726     03EE  1803               	skipnc
   727     03EF  0AE1               	incf	actualizarPantalla@i+1,f
   728     03F0  3000               	movlw	0
   729     03F1  07E1               	addwf	actualizarPantalla@i+1,f
   730     03F2  0861               	movf	actualizarPantalla@i+1,w
   731     03F3  3A80               	xorlw	128
   732     03F4  00FF               	movwf	127
   733     03F5  3080               	movlw	128
   734     03F6  027F               	subwf	127,w
   735     03F7  1D03               	skipz
   736     03F8  2BFB               	goto	u535
   737     03F9  3004               	movlw	4
   738     03FA  0260               	subwf	actualizarPantalla@i,w
   739     03FB                     u535:
   740     03FB  1803               	btfsc	3,0
   741     03FC  0008               	return
   742     03FD  2B4D               	goto	l760
   743     03FE                     __end_of_actualizarPantalla:
   744                           
   745                           	psect	text2
   746     0254                     __ptext2:	
   747 ;; *************** function ___lwmod *****************
   748 ;; Defined at:
   749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  divisor         2   13[COMMON] unsigned int 
   752 ;;  dividend        2   15[COMMON] unsigned int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  counter         1   17[COMMON] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2   13[COMMON] unsigned int 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1
   764 ;;      Params:         4       0       0
   765 ;;      Locals:         1       0       0
   766 ;;      Temps:          0       0       0
   767 ;;      Totals:         5       0       0
   768 ;;Total ram usage:        5 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_actualizarPantalla
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     0254                     ___lwmod:	
   778                           ;psect for function ___lwmod
   779                           
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   783     0254  084D               	movf	___lwmod@divisor,w
   784     0255  044E               	iorwf	___lwmod@divisor+1,w
   785     0256  1903               	btfsc	3,2
   786     0257  2A7F               	goto	l742
   787     0258  3001               	movlw	1
   788     0259  00D1               	movwf	___lwmod@counter
   789     025A                     l732:
   790     025A  1BCE               	btfsc	___lwmod@divisor+1,7
   791     025B  2A66               	goto	l734
   792     025C  3001               	movlw	1
   793     025D                     u385:
   794     025D  1003               	clrc
   795     025E  0DCD               	rlf	___lwmod@divisor,f
   796     025F  0DCE               	rlf	___lwmod@divisor+1,f
   797     0260  3EFF               	addlw	-1
   798     0261  1D03               	skipz
   799     0262  2A5D               	goto	u385
   800     0263  3001               	movlw	1
   801     0264  07D1               	addwf	___lwmod@counter,f
   802     0265  2A5A               	goto	l732
   803     0266                     l734:
   804     0266  084E               	movf	___lwmod@divisor+1,w
   805     0267  0250               	subwf	___lwmod@dividend+1,w
   806     0268  1D03               	skipz
   807     0269  2A6C               	goto	u405
   808     026A  084D               	movf	___lwmod@divisor,w
   809     026B  024F               	subwf	___lwmod@dividend,w
   810     026C                     u405:
   811     026C  1C03               	skipc
   812     026D  2A74               	goto	l738
   813     026E  084D               	movf	___lwmod@divisor,w
   814     026F  02CF               	subwf	___lwmod@dividend,f
   815     0270  084E               	movf	___lwmod@divisor+1,w
   816     0271  1C03               	skipc
   817     0272  03D0               	decf	___lwmod@dividend+1,f
   818     0273  02D0               	subwf	___lwmod@dividend+1,f
   819     0274                     l738:
   820     0274  3001               	movlw	1
   821     0275                     u415:
   822     0275  1003               	clrc
   823     0276  0CCE               	rrf	___lwmod@divisor+1,f
   824     0277  0CCD               	rrf	___lwmod@divisor,f
   825     0278  3EFF               	addlw	-1
   826     0279  1D03               	skipz
   827     027A  2A75               	goto	u415
   828     027B  3001               	movlw	1
   829     027C  02D1               	subwf	___lwmod@counter,f
   830     027D  1D03               	btfss	3,2
   831     027E  2A66               	goto	l734
   832     027F                     l742:
   833     027F  0850               	movf	___lwmod@dividend+1,w
   834     0280  00CE               	movwf	?___lwmod+1
   835     0281  084F               	movf	___lwmod@dividend,w
   836     0282  00CD               	movwf	?___lwmod
   837     0283  0008               	return
   838     0284                     __end_of___lwmod:
   839                           
   840                           	psect	text3
   841     0284                     __ptext3:	
   842 ;; *************** function ___lwdiv *****************
   843 ;; Defined at:
   844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  divisor         2    6[COMMON] unsigned int 
   847 ;;  dividend        2    8[COMMON] unsigned int 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  quotient        2   10[COMMON] unsigned int 
   850 ;;  counter         1   12[COMMON] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2    6[COMMON] unsigned int 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1
   860 ;;      Params:         4       0       0
   861 ;;      Locals:         3       0       0
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         7       0       0
   864 ;;Total ram usage:        7 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_actualizarPantalla
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874     0284                     ___lwdiv:	
   875                           ;psect for function ___lwdiv
   876                           
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   880     0284  01CA               	clrf	___lwdiv@quotient
   881     0285  01CB               	clrf	___lwdiv@quotient+1
   882     0286  0846               	movf	___lwdiv@divisor,w
   883     0287  0447               	iorwf	___lwdiv@divisor+1,w
   884     0288  1903               	btfsc	3,2
   885     0289  2AB9               	goto	l720
   886     028A  3001               	movlw	1
   887     028B  00CC               	movwf	___lwdiv@counter
   888     028C                     l708:
   889     028C  1BC7               	btfsc	___lwdiv@divisor+1,7
   890     028D  2A98               	goto	l710
   891     028E  3001               	movlw	1
   892     028F                     u315:
   893     028F  1003               	clrc
   894     0290  0DC6               	rlf	___lwdiv@divisor,f
   895     0291  0DC7               	rlf	___lwdiv@divisor+1,f
   896     0292  3EFF               	addlw	-1
   897     0293  1D03               	skipz
   898     0294  2A8F               	goto	u315
   899     0295  3001               	movlw	1
   900     0296  07CC               	addwf	___lwdiv@counter,f
   901     0297  2A8C               	goto	l708
   902     0298                     l710:
   903     0298  3001               	movlw	1
   904     0299                     u335:
   905     0299  1003               	clrc
   906     029A  0DCA               	rlf	___lwdiv@quotient,f
   907     029B  0DCB               	rlf	___lwdiv@quotient+1,f
   908     029C  3EFF               	addlw	-1
   909     029D  1D03               	skipz
   910     029E  2A99               	goto	u335
   911     029F  0847               	movf	___lwdiv@divisor+1,w
   912     02A0  0249               	subwf	___lwdiv@dividend+1,w
   913     02A1  1D03               	skipz
   914     02A2  2AA5               	goto	u345
   915     02A3  0846               	movf	___lwdiv@divisor,w
   916     02A4  0248               	subwf	___lwdiv@dividend,w
   917     02A5                     u345:
   918     02A5  1C03               	skipc
   919     02A6  2AAE               	goto	l716
   920     02A7  0846               	movf	___lwdiv@divisor,w
   921     02A8  02C8               	subwf	___lwdiv@dividend,f
   922     02A9  0847               	movf	___lwdiv@divisor+1,w
   923     02AA  1C03               	skipc
   924     02AB  03C9               	decf	___lwdiv@dividend+1,f
   925     02AC  02C9               	subwf	___lwdiv@dividend+1,f
   926     02AD  144A               	bsf	___lwdiv@quotient,0
   927     02AE                     l716:
   928     02AE  3001               	movlw	1
   929     02AF                     u355:
   930     02AF  1003               	clrc
   931     02B0  0CC7               	rrf	___lwdiv@divisor+1,f
   932     02B1  0CC6               	rrf	___lwdiv@divisor,f
   933     02B2  3EFF               	addlw	-1
   934     02B3  1D03               	skipz
   935     02B4  2AAF               	goto	u355
   936     02B5  3001               	movlw	1
   937     02B6  02CC               	subwf	___lwdiv@counter,f
   938     02B7  1D03               	btfss	3,2
   939     02B8  2A98               	goto	l710
   940     02B9                     l720:
   941     02B9  084B               	movf	___lwdiv@quotient+1,w
   942     02BA  00C7               	movwf	?___lwdiv+1
   943     02BB  084A               	movf	___lwdiv@quotient,w
   944     02BC  00C6               	movwf	?___lwdiv
   945     02BD  0008               	return
   946     02BE                     __end_of___lwdiv:
   947                           
   948                           	psect	text4
   949     0233                     __ptext4:	
   950 ;; *************** function ___wmul *****************
   951 ;; Defined at:
   952 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  multiplier      2    0[COMMON] unsigned int 
   955 ;;  multiplicand    2    2[COMMON] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  product         2    4[COMMON] unsigned int 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2    0[COMMON] unsigned int 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1
   967 ;;      Params:         4       0       0
   968 ;;      Locals:         2       0       0
   969 ;;      Temps:          0       0       0
   970 ;;      Totals:         6       0       0
   971 ;;Total ram usage:        6 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980     0233                     ___wmul:	
   981                           ;psect for function ___wmul
   982                           
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   986     0233  01C4               	clrf	___wmul@product
   987     0234  01C5               	clrf	___wmul@product+1
   988     0235                     l780:
   989     0235  1C40               	btfss	___wmul@multiplier,0
   990     0236  2A3D               	goto	l120
   991     0237  0842               	movf	___wmul@multiplicand,w
   992     0238  07C4               	addwf	___wmul@product,f
   993     0239  1803               	skipnc
   994     023A  0AC5               	incf	___wmul@product+1,f
   995     023B  0843               	movf	___wmul@multiplicand+1,w
   996     023C  07C5               	addwf	___wmul@product+1,f
   997     023D                     l120:
   998     023D  3001               	movlw	1
   999     023E                     u555:
  1000     023E  1003               	clrc
  1001     023F  0DC2               	rlf	___wmul@multiplicand,f
  1002     0240  0DC3               	rlf	___wmul@multiplicand+1,f
  1003     0241  3EFF               	addlw	-1
  1004     0242  1D03               	skipz
  1005     0243  2A3E               	goto	u555
  1006     0244  3001               	movlw	1
  1007     0245                     u565:
  1008     0245  1003               	clrc
  1009     0246  0CC1               	rrf	___wmul@multiplier+1,f
  1010     0247  0CC0               	rrf	___wmul@multiplier,f
  1011     0248  3EFF               	addlw	-1
  1012     0249  1D03               	skipz
  1013     024A  2A45               	goto	u565
  1014     024B  0840               	movf	___wmul@multiplier,w
  1015     024C  0441               	iorwf	___wmul@multiplier+1,w
  1016     024D  1D03               	btfss	3,2
  1017     024E  2A35               	goto	l780
  1018     024F  0845               	movf	___wmul@product+1,w
  1019     0250  00C1               	movwf	?___wmul+1
  1020     0251  0844               	movf	___wmul@product,w
  1021     0252  00C0               	movwf	?___wmul
  1022     0253  0008               	return
  1023     0254                     __end_of___wmul:
  1024     0000                     ___latbits      equ	0
  1025     007E                     btemp           set	126	;btemp
  1026     007E                     wtemp0          set	126
  1027                           
  1028                           	psect	config
  1029                           
  1030                           ;Config register CONFIG @ 0x2007
  1031                           ;	Oscillator Selection bits
  1032                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1033                           ;	Watchdog Timer Enable bit
  1034                           ;	WDTE = OFF, WDT disabled
  1035                           ;	Power-up Timer Enable bit
  1036                           ;	PWRTE = OFF, PWRT disabled
  1037                           ;	RA5/MCLR/VPP Pin Function Select bit
  1038                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1039                           ;	Brown-out Reset Enable bit
  1040                           ;	BOREN = OFF, BOR disabled
  1041                           ;	Low-Voltage Programming Enable bit
  1042                           ;	LVP = OFF, RB3/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1043                           ;	Data EE Memory Code Protection bit
  1044                           ;	CPD = OFF, Code protection off
  1045                           ;	Flash Program Memory Write Enable bits
  1046                           ;	WRT = OFF, Write protection off
  1047                           ;	In-Circuit Debugger Mode bit
  1048                           ;	DEBUG = 0x1, unprogrammed default
  1049                           ;	CCP1 Pin Selection bit
  1050                           ;	CCPMX = RB2, CCP1 function on RB2
  1051                           ;	Flash Program Memory Code Protection bit
  1052                           ;	CP = OFF, Code protection off
  1053     2007                     	org	8199
  1054     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           62     39      39
    BANK0            32      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_actualizarPantalla
    _actualizarPantalla->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1146
                                             34 COMMON     5     5      0
                            ___lwdiv
                             ___wmul
                 _actualizarPantalla
 ---------------------------------------------------------------------------------
 (1) _actualizarPantalla                                  16    14      2     834
                                             18 COMMON    16    14      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                             13 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     170
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _actualizarPantalla
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           62      0       0      0.0%
BITBANK0            32      0       0      0.0%
BITBANK1            32      0       0      0.0%
COMMON              62     39      39     62.9%
BANK0               32      0       0      0.0%
BANK1               32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      39      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Dec 20 12:44:36 2024

            ___wmul@multiplicand 0042                              l120 023D                              l710 0298  
                            l720 02B9                              l810 02E3                              l716 02AE  
                            l708 028C                              l732 025A                              l734 0266  
                            l742 027F                              l760 034D                              l808 02D7  
                            l738 0274                              l770 03D8                              l780 0235  
                            l772 03E3                              l764 03B6                              l766 03C2  
                            l768 03CD                              l798 02C5                              u315 028F  
                            u405 026C                              u510 03E0                              u430 03B3  
                            u335 0299                              u415 0275                              u345 02A5  
                            u450 03BF                              u355 02AF                              u470 03CA  
                            u535 03FB                              u607 02DD                              u385 025D  
                            u617 03E7                              u490 03D5                              u555 023E  
                            u565 0245                              u597 02C7                              fsr0 0004  
                            indf 0000                             _main 02BE                             btemp 007E  
                           start 0000                            ?_main 0040                  __end_of___lwdiv 02BE  
                __end_of___lwmod 0284                            _TRISB 0086       __end_of_actualizarPantalla 03FE  
                          status 0003                            wtemp0 007E                    main@adc_value 0063  
                __initialization 03FE                     __end_of_main 0305                           ??_main 0062  
                         _ADCON0 001F                           _ADCON1 009F                           _ADRESH 001E  
                         _ADRESL 009E                           ___wmul 0233                        ??___lwdiv 004A  
                      ??___lwmod 0051          __end_of__initialization 03FE                   __pcstackCOMMON 0040  
                     __pmaintext 02BE                          ?___wmul 0040               _actualizarPantalla 0305  
            ?_actualizarPantalla 0052                          ___lwdiv 0284                          ___lwmod 0254  
                        __ptext1 0305                          __ptext2 0254                          __ptext3 0284  
                        __ptext4 0233             ??_actualizarPantalla 0054             end_of_initialization 03FE  
                      _PORTAbits 0005                        _PORTBbits 0006                        _TRISAbits 0085  
                 main@voltage_mv 0065                   __end_of___wmul 0254              start_initialization 03FE  
                       ??___wmul 0044                        ___latbits 0000                 ___lwdiv@dividend 0048  
                       ?___lwdiv 0046                         ?___lwmod 004D  actualizarPantalla@display_value 0052  
               ___lwdiv@quotient 004A         actualizarPantalla@digits 0058                   ___wmul@product 0044  
              ___wmul@multiplier 0040                  ___lwdiv@divisor 0046              actualizarPantalla@i 0060  
                ___lwdiv@counter 004C                 ___lwmod@dividend 004F                  ___lwmod@divisor 004D  
                ___lwmod@counter 0051  
