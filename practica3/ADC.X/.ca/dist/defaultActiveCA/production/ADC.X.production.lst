

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Dec 20 12:44:34 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F818
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F818 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     001E                     ADRESH          equ	30	;# 
    80     001F                     ADCON0          equ	31	;# 
    81     0081                     OPTION_REG      equ	129	;# 
    82     0085                     TRISA           equ	133	;# 
    83     0086                     TRISB           equ	134	;# 
    84     008C                     PIE1            equ	140	;# 
    85     008D                     PIE2            equ	141	;# 
    86     008E                     PCON            equ	142	;# 
    87     008F                     OSCCON          equ	143	;# 
    88     0090                     OSCTUNE         equ	144	;# 
    89     0092                     PR2             equ	146	;# 
    90     0093                     SSPADD          equ	147	;# 
    91     0094                     SSPSTAT         equ	148	;# 
    92     009E                     ADRESL          equ	158	;# 
    93     009F                     ADCON1          equ	159	;# 
    94     010C                     EEDATA          equ	268	;# 
    95     010D                     EEADR           equ	269	;# 
    96     010E                     EEDATH          equ	270	;# 
    97     010F                     EEADRH          equ	271	;# 
    98     018C                     EECON1          equ	396	;# 
    99     018D                     EECON2          equ	397	;# 
   100     0000                     INDF            equ	0	;# 
   101     0001                     TMR0            equ	1	;# 
   102     0002                     PCL             equ	2	;# 
   103     0003                     STATUS          equ	3	;# 
   104     0004                     FSR             equ	4	;# 
   105     0005                     PORTA           equ	5	;# 
   106     0006                     PORTB           equ	6	;# 
   107     000A                     PCLATH          equ	10	;# 
   108     000B                     INTCON          equ	11	;# 
   109     000C                     PIR1            equ	12	;# 
   110     000D                     PIR2            equ	13	;# 
   111     000E                     TMR1            equ	14	;# 
   112     000E                     TMR1L           equ	14	;# 
   113     000F                     TMR1H           equ	15	;# 
   114     0010                     T1CON           equ	16	;# 
   115     0011                     TMR2            equ	17	;# 
   116     0012                     T2CON           equ	18	;# 
   117     0013                     SSPBUF          equ	19	;# 
   118     0014                     SSPCON          equ	20	;# 
   119     0015                     CCPR1           equ	21	;# 
   120     0015                     CCPR1L          equ	21	;# 
   121     0016                     CCPR1H          equ	22	;# 
   122     0017                     CCP1CON         equ	23	;# 
   123     001E                     ADRESH          equ	30	;# 
   124     001F                     ADCON0          equ	31	;# 
   125     0081                     OPTION_REG      equ	129	;# 
   126     0085                     TRISA           equ	133	;# 
   127     0086                     TRISB           equ	134	;# 
   128     008C                     PIE1            equ	140	;# 
   129     008D                     PIE2            equ	141	;# 
   130     008E                     PCON            equ	142	;# 
   131     008F                     OSCCON          equ	143	;# 
   132     0090                     OSCTUNE         equ	144	;# 
   133     0092                     PR2             equ	146	;# 
   134     0093                     SSPADD          equ	147	;# 
   135     0094                     SSPSTAT         equ	148	;# 
   136     009E                     ADRESL          equ	158	;# 
   137     009F                     ADCON1          equ	159	;# 
   138     010C                     EEDATA          equ	268	;# 
   139     010D                     EEADR           equ	269	;# 
   140     010E                     EEDATH          equ	270	;# 
   141     010F                     EEADRH          equ	271	;# 
   142     018C                     EECON1          equ	396	;# 
   143     018D                     EECON2          equ	397	;# 
   144     001E                     _ADRESH         set	30
   145     001F                     _ADCON0         set	31
   146     0005                     _PORTAbits      set	5
   147     0006                     _PORTBbits      set	6
   148     009E                     _ADRESL         set	158
   149     009F                     _ADCON1         set	159
   150     0085                     _TRISAbits      set	133
   151     0086                     _TRISB          set	134
   152                           
   153                           	psect	cinit
   154     03FE                     start_initialization:	
   155                           ; #config settings
   156                           
   157     03FE                     __initialization:
   158     03FE                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161     03FE                     __end_of__initialization:
   162     03FE  0183               	clrf	3
   163     03FF  2AB4               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	cstackCOMMON
   166     0040                     __pcstackCOMMON:
   167     0040                     ?_main:
   168     0040                     ?___wmul:	
   169                           ; 1 bytes @ 0x0
   170                           
   171     0040                     ___wmul@multiplier:	
   172                           ; 2 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176     0040                     	ds	2
   177     0042                     ___wmul@multiplicand:
   178                           
   179                           ; 2 bytes @ 0x2
   180     0042                     	ds	2
   181     0044                     ___wmul@product:
   182     0044                     ??___wmul:	
   183                           ; 2 bytes @ 0x4
   184                           
   185                           
   186                           ; 1 bytes @ 0x4
   187     0044                     	ds	2
   188     0046                     ?___lwdiv:
   189     0046                     ___lwdiv@divisor:	
   190                           ; 2 bytes @ 0x6
   191                           
   192                           
   193                           ; 2 bytes @ 0x6
   194     0046                     	ds	2
   195     0048                     ___lwdiv@dividend:
   196                           
   197                           ; 2 bytes @ 0x8
   198     0048                     	ds	2
   199     004A                     ___lwdiv@quotient:
   200     004A                     ??___lwdiv:	
   201                           ; 2 bytes @ 0xA
   202                           
   203                           
   204                           ; 1 bytes @ 0xA
   205     004A                     	ds	2
   206     004C                     ___lwdiv@counter:
   207                           
   208                           ; 1 bytes @ 0xC
   209     004C                     	ds	1
   210     004D                     ?___lwmod:
   211     004D                     ___lwmod@divisor:	
   212                           ; 2 bytes @ 0xD
   213                           
   214                           
   215                           ; 2 bytes @ 0xD
   216     004D                     	ds	2
   217     004F                     ___lwmod@dividend:
   218                           
   219                           ; 2 bytes @ 0xF
   220     004F                     	ds	2
   221     0051                     ___lwmod@counter:
   222     0051                     ??___lwmod:	
   223                           ; 1 bytes @ 0x11
   224                           
   225                           
   226                           ; 1 bytes @ 0x11
   227     0051                     	ds	1
   228     0052                     ?_actualizarPantalla:
   229     0052                     actualizarPantalla@display_value:	
   230                           ; 1 bytes @ 0x12
   231                           
   232                           
   233                           ; 2 bytes @ 0x12
   234     0052                     	ds	2
   235     0054                     ??_actualizarPantalla:
   236                           
   237                           ; 1 bytes @ 0x14
   238     0054                     	ds	4
   239     0058                     actualizarPantalla@digits:
   240                           
   241                           ; 8 bytes @ 0x18
   242     0058                     	ds	8
   243     0060                     actualizarPantalla@i:
   244                           
   245                           ; 2 bytes @ 0x20
   246     0060                     	ds	2
   247     0062                     ??_main:
   248                           
   249                           ; 1 bytes @ 0x22
   250     0062                     	ds	1
   251     0063                     main@adc_value:
   252                           
   253                           ; 2 bytes @ 0x23
   254     0063                     	ds	2
   255     0065                     main@voltage_mv:
   256                           
   257                           ; 2 bytes @ 0x25
   258     0065                     	ds	2
   259                           
   260                           	psect	maintext
   261     02B4                     __pmaintext:	
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 52 in file "../main_adc.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  voltage_mv      2   37[COMMON] unsigned int 
   272 ;;  adc_value       2   35[COMMON] unsigned int 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1
   282 ;;      Params:         0       0       0
   283 ;;      Locals:         4       0       0
   284 ;;      Temps:          1       0       0
   285 ;;      Totals:         5       0       0
   286 ;;Total ram usage:        5 bytes
   287 ;; Hardware stack levels required when called: 2
   288 ;; This function calls:
   289 ;;		___lwdiv
   290 ;;		___wmul
   291 ;;		_actualizarPantalla
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     02B4                     _main:	
   298                           ;psect for function _main
   299                           
   300     02B4                     l792:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   303                           
   304                           
   305                           ;../main_adc.c: 54:     unsigned int voltage_mv = 0;
   306     02B4  01E5               	clrf	main@voltage_mv
   307     02B5  01E6               	clrf	main@voltage_mv+1
   308                           
   309                           ;../main_adc.c: 56:     TRISB = 0x00;
   310     02B6  1683               	bsf	3,5	;RP0=1, select bank1
   311     02B7  1303               	bcf	3,6	;RP1=0, select bank1
   312     02B8  0186               	clrf	6	;volatile
   313     02B9                     l794:
   314                           
   315                           ;../main_adc.c: 57:     TRISAbits.TRISA2 = 0;
   316     02B9  1105               	bcf	5,2	;volatile
   317     02BA                     l796:
   318                           
   319                           ;../main_adc.c: 58:     TRISAbits.TRISA0 = 1;
   320     02BA  1405               	bsf	5,0	;volatile
   321     02BB                     l798:
   322                           
   323                           ;../main_adc.c: 61:     _delay((unsigned long)((10)*(500000/4000.0)));
   324     02BB  30F9               	movlw	249
   325     02BC  00E2               	movwf	??_main
   326     02BD                     u597:
   327     02BD  2ABE               	nop2
   328     02BE  0BE2               	decfsz	??_main,f
   329     02BF  2ABD               	goto	u597
   330     02C0  2AC1               	nop2
   331     02C1  2AC2               	nop2
   332     02C2                     l800:
   333                           
   334                           ;../main_adc.c: 65:         ADCON0 = 0b01000001;
   335     02C2  3041               	movlw	65
   336     02C3  1283               	bcf	3,5	;RP0=0, select bank0
   337     02C4  1303               	bcf	3,6	;RP1=0, select bank0
   338     02C5  009F               	movwf	31	;volatile
   339     02C6                     l802:
   340                           
   341                           ;../main_adc.c: 66:         ADCON1 = 0b10001110;
   342     02C6  308E               	movlw	142
   343     02C7  1683               	bsf	3,5	;RP0=1, select bank1
   344     02C8  1303               	bcf	3,6	;RP1=0, select bank1
   345     02C9  009F               	movwf	31	;volatile
   346     02CA                     l804:
   347                           
   348                           ;../main_adc.c: 68:         ADCON0 |= 0b00000100;
   349     02CA  1283               	bcf	3,5	;RP0=0, select bank0
   350     02CB  1303               	bcf	3,6	;RP1=0, select bank0
   351     02CC  151F               	bsf	31,2	;volatile
   352                           
   353                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   354     02CD  2AD5               	goto	l808
   355     02CE                     l806:
   356                           
   357                           ;../main_adc.c: 70:             _delay((unsigned long)((10)*(500000/4000.0)));
   358     02CE  30F9               	movlw	249
   359     02CF  00E2               	movwf	??_main
   360     02D0                     u607:
   361     02D0  2AD1               	nop2
   362     02D1  0BE2               	decfsz	??_main,f
   363     02D2  2AD0               	goto	u607
   364     02D3  2AD4               	nop2
   365     02D4  2AD5               	nop2
   366     02D5                     l808:
   367                           
   368                           ;../main_adc.c: 69:         while (ADCON0 & 0b00000100) {
   369     02D5  1283               	bcf	3,5	;RP0=0, select bank0
   370     02D6  1303               	bcf	3,6	;RP1=0, select bank0
   371     02D7  191F               	btfsc	31,2	;volatile
   372     02D8  2ADA               	goto	u581
   373     02D9  2ADB               	goto	u580
   374     02DA                     u581:
   375     02DA  2ACE               	goto	l806
   376     02DB                     u580:
   377     02DB                     l810:
   378                           
   379                           ;../main_adc.c: 74:         adc_value = (unsigned int)( (ADRESH << 8) | ADRESL );
   380     02DB  081E               	movf	30,w	;volatile
   381     02DC  00E4               	movwf	main@adc_value+1
   382     02DD  1683               	bsf	3,5	;RP0=1, select bank1
   383     02DE  1303               	bcf	3,6	;RP1=0, select bank1
   384     02DF  081E               	movf	30,w	;volatile
   385     02E0  00E3               	movwf	main@adc_value
   386     02E1                     l812:
   387                           
   388                           ;../main_adc.c: 77:         voltage_mv = ((unsigned int)adc_value * 5000) / 1023;
   389     02E1  30FF               	movlw	255
   390     02E2  00C6               	movwf	___lwdiv@divisor
   391     02E3  3003               	movlw	3
   392     02E4  00C7               	movwf	___lwdiv@divisor+1
   393     02E5  0864               	movf	main@adc_value+1,w
   394     02E6  00C1               	movwf	___wmul@multiplier+1
   395     02E7  0863               	movf	main@adc_value,w
   396     02E8  00C0               	movwf	___wmul@multiplier
   397     02E9  3088               	movlw	136
   398     02EA  00C2               	movwf	___wmul@multiplicand
   399     02EB  3013               	movlw	19
   400     02EC  00C3               	movwf	___wmul@multiplicand+1
   401     02ED  2215               	fcall	___wmul
   402     02EE  0841               	movf	?___wmul+1,w
   403     02EF  00C9               	movwf	___lwdiv@dividend+1
   404     02F0  0840               	movf	?___wmul,w
   405     02F1  00C8               	movwf	___lwdiv@dividend
   406     02F2  2272               	fcall	___lwdiv
   407     02F3  0847               	movf	?___lwdiv+1,w
   408     02F4  00E6               	movwf	main@voltage_mv+1
   409     02F5  0846               	movf	?___lwdiv,w
   410     02F6  00E5               	movwf	main@voltage_mv
   411     02F7                     l814:
   412                           
   413                           ;../main_adc.c: 80:         actualizarPantalla(voltage_mv);
   414     02F7  0866               	movf	main@voltage_mv+1,w
   415     02F8  00D3               	movwf	actualizarPantalla@display_value+1
   416     02F9  0865               	movf	main@voltage_mv,w
   417     02FA  00D2               	movwf	actualizarPantalla@display_value
   418     02FB  22FE               	fcall	_actualizarPantalla
   419     02FC  2ABB               	goto	l798
   420     02FD  2800               	ljmp	start
   421     02FE                     __end_of_main:
   422                           
   423                           	psect	text1
   424     02FE                     __ptext1:	
   425 ;; *************** function _actualizarPantalla *****************
   426 ;; Defined at:
   427 ;;		line 25 in file "../main_adc.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  display_valu    2   18[COMMON] unsigned int 
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  digits          8   24[COMMON] int [4]
   432 ;;  i               2   32[COMMON] int 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1
   442 ;;      Params:         2       0       0
   443 ;;      Locals:        10       0       0
   444 ;;      Temps:          4       0       0
   445 ;;      Totals:        16       0       0
   446 ;;Total ram usage:       16 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		___lwdiv
   451 ;;		___lwmod
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457     02FE                     _actualizarPantalla:	
   458                           ;psect for function _actualizarPantalla
   459                           
   460     02FE                     l746:	
   461                           ;incstack = 0
   462                           ; Regs used in _actualizarPantalla: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   463                           
   464     02FE                     l748:
   465                           
   466                           ;../main_adc.c: 28:     digits[0] = display_value / 1000;
   467     02FE  30E8               	movlw	232
   468     02FF  00C6               	movwf	___lwdiv@divisor
   469     0300  3003               	movlw	3
   470     0301  00C7               	movwf	___lwdiv@divisor+1
   471     0302  0853               	movf	actualizarPantalla@display_value+1,w
   472     0303  00C9               	movwf	___lwdiv@dividend+1
   473     0304  0852               	movf	actualizarPantalla@display_value,w
   474     0305  00C8               	movwf	___lwdiv@dividend
   475     0306  2272               	fcall	___lwdiv
   476     0307  0847               	movf	?___lwdiv+1,w
   477     0308  00D9               	movwf	actualizarPantalla@digits+1
   478     0309  0846               	movf	?___lwdiv,w
   479     030A  00D8               	movwf	actualizarPantalla@digits
   480     030B                     l750:
   481                           
   482                           ;../main_adc.c: 29:     digits[1] = (display_value / 100) % 10;
   483     030B  300A               	movlw	10
   484     030C  00CD               	movwf	___lwmod@divisor
   485     030D  3000               	movlw	0
   486     030E  00CE               	movwf	___lwmod@divisor+1
   487     030F  3064               	movlw	100
   488     0310  00C6               	movwf	___lwdiv@divisor
   489     0311  3000               	movlw	0
   490     0312  00C7               	movwf	___lwdiv@divisor+1
   491     0313  0853               	movf	actualizarPantalla@display_value+1,w
   492     0314  00C9               	movwf	___lwdiv@dividend+1
   493     0315  0852               	movf	actualizarPantalla@display_value,w
   494     0316  00C8               	movwf	___lwdiv@dividend
   495     0317  2272               	fcall	___lwdiv
   496     0318  0847               	movf	?___lwdiv+1,w
   497     0319  00D0               	movwf	___lwmod@dividend+1
   498     031A  0846               	movf	?___lwdiv,w
   499     031B  00CF               	movwf	___lwmod@dividend
   500     031C  223A               	fcall	___lwmod
   501     031D  084E               	movf	?___lwmod+1,w
   502     031E  00DB               	movwf	actualizarPantalla@digits+3
   503     031F  084D               	movf	?___lwmod,w
   504     0320  00DA               	movwf	actualizarPantalla@digits+2
   505     0321                     l752:
   506                           
   507                           ;../main_adc.c: 30:     digits[2] = (display_value / 10) % 10;
   508     0321  300A               	movlw	10
   509     0322  00CD               	movwf	___lwmod@divisor
   510     0323  3000               	movlw	0
   511     0324  00CE               	movwf	___lwmod@divisor+1
   512     0325  300A               	movlw	10
   513     0326  00C6               	movwf	___lwdiv@divisor
   514     0327  3000               	movlw	0
   515     0328  00C7               	movwf	___lwdiv@divisor+1
   516     0329  0853               	movf	actualizarPantalla@display_value+1,w
   517     032A  00C9               	movwf	___lwdiv@dividend+1
   518     032B  0852               	movf	actualizarPantalla@display_value,w
   519     032C  00C8               	movwf	___lwdiv@dividend
   520     032D  2272               	fcall	___lwdiv
   521     032E  0847               	movf	?___lwdiv+1,w
   522     032F  00D0               	movwf	___lwmod@dividend+1
   523     0330  0846               	movf	?___lwdiv,w
   524     0331  00CF               	movwf	___lwmod@dividend
   525     0332  223A               	fcall	___lwmod
   526     0333  084E               	movf	?___lwmod+1,w
   527     0334  00DD               	movwf	actualizarPantalla@digits+5
   528     0335  084D               	movf	?___lwmod,w
   529     0336  00DC               	movwf	actualizarPantalla@digits+4
   530     0337                     l754:
   531                           
   532                           ;../main_adc.c: 31:     digits[3] = display_value % 10;
   533     0337  300A               	movlw	10
   534     0338  00CD               	movwf	___lwmod@divisor
   535     0339  3000               	movlw	0
   536     033A  00CE               	movwf	___lwmod@divisor+1
   537     033B  0853               	movf	actualizarPantalla@display_value+1,w
   538     033C  00D0               	movwf	___lwmod@dividend+1
   539     033D  0852               	movf	actualizarPantalla@display_value,w
   540     033E  00CF               	movwf	___lwmod@dividend
   541     033F  223A               	fcall	___lwmod
   542     0340  084E               	movf	?___lwmod+1,w
   543     0341  00DF               	movwf	actualizarPantalla@digits+7
   544     0342  084D               	movf	?___lwmod,w
   545     0343  00DE               	movwf	actualizarPantalla@digits+6
   546                           
   547                           ;../main_adc.c: 33:     for (i = 0; i < 4; i++) {
   548     0344  01E0               	clrf	actualizarPantalla@i
   549     0345  01E1               	clrf	actualizarPantalla@i+1
   550     0346                     l760:
   551                           
   552                           ;../main_adc.c: 34:         PORTBbits.RB0 = (digits[i] >> 0) & 0x01;
   553     0346  0860               	movf	actualizarPantalla@i,w
   554     0347  00D4               	movwf	??_actualizarPantalla
   555     0348  0754               	addwf	??_actualizarPantalla,w
   556     0349  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   557     034A  0084               	movwf	4
   558     034B  3001               	movlw	1
   559     034C  0500               	andwf	0,w
   560     034D  00D5               	movwf	??_actualizarPantalla+1
   561     034E  1283               	bcf	3,5	;RP0=0, select bank0
   562     034F  1303               	bcf	3,6	;RP1=0, select bank0
   563     0350  0806               	movf	6,w	;volatile
   564     0351  0655               	xorwf	??_actualizarPantalla+1,w
   565     0352  39FE               	andlw	-2
   566     0353  0655               	xorwf	??_actualizarPantalla+1,w
   567     0354  0086               	movwf	6	;volatile
   568                           
   569                           ;../main_adc.c: 35:         PORTBbits.RB1 = (digits[i] >> 1) & 0x01;
   570     0355  0860               	movf	actualizarPantalla@i,w
   571     0356  00D4               	movwf	??_actualizarPantalla
   572     0357  0754               	addwf	??_actualizarPantalla,w
   573     0358  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   574     0359  0084               	movwf	4
   575     035A  0800               	movf	0,w
   576     035B  00D5               	movwf	??_actualizarPantalla+1
   577     035C  0A84               	incf	4,f
   578     035D  0800               	movf	0,w
   579     035E  00D6               	movwf	??_actualizarPantalla+2
   580     035F  0D56               	rlf	??_actualizarPantalla+2,w
   581     0360  0CD6               	rrf	??_actualizarPantalla+2,f
   582     0361  0CD5               	rrf	??_actualizarPantalla+1,f
   583     0362  0855               	movf	??_actualizarPantalla+1,w
   584     0363  3901               	andlw	1
   585     0364  00D7               	movwf	??_actualizarPantalla+3
   586     0365  0DD7               	rlf	??_actualizarPantalla+3,f
   587     0366  0806               	movf	6,w	;volatile
   588     0367  0657               	xorwf	??_actualizarPantalla+3,w
   589     0368  39FD               	andlw	-3
   590     0369  0657               	xorwf	??_actualizarPantalla+3,w
   591     036A  0086               	movwf	6	;volatile
   592                           
   593                           ;../main_adc.c: 36:         PORTBbits.RB2 = (digits[i] >> 2) & 0x01;
   594     036B  0860               	movf	actualizarPantalla@i,w
   595     036C  00D4               	movwf	??_actualizarPantalla
   596     036D  0754               	addwf	??_actualizarPantalla,w
   597     036E  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   598     036F  0084               	movwf	4
   599     0370  0800               	movf	0,w
   600     0371  00D5               	movwf	??_actualizarPantalla+1
   601     0372  0A84               	incf	4,f
   602     0373  0800               	movf	0,w
   603     0374  00D6               	movwf	??_actualizarPantalla+2
   604     0375  0D56               	rlf	??_actualizarPantalla+2,w
   605     0376  0CD6               	rrf	??_actualizarPantalla+2,f
   606     0377  0CD5               	rrf	??_actualizarPantalla+1,f
   607     0378  0D56               	rlf	??_actualizarPantalla+2,w
   608     0379  0CD6               	rrf	??_actualizarPantalla+2,f
   609     037A  0CD5               	rrf	??_actualizarPantalla+1,f
   610     037B  0855               	movf	??_actualizarPantalla+1,w
   611     037C  3901               	andlw	1
   612     037D  00D7               	movwf	??_actualizarPantalla+3
   613     037E  0DD7               	rlf	??_actualizarPantalla+3,f
   614     037F  0DD7               	rlf	??_actualizarPantalla+3,f
   615     0380  0806               	movf	6,w	;volatile
   616     0381  0657               	xorwf	??_actualizarPantalla+3,w
   617     0382  39FB               	andlw	-5
   618     0383  0657               	xorwf	??_actualizarPantalla+3,w
   619     0384  0086               	movwf	6	;volatile
   620                           
   621                           ;../main_adc.c: 37:         PORTBbits.RB3 = (digits[i] >> 3) & 0x01;
   622     0385  0860               	movf	actualizarPantalla@i,w
   623     0386  00D4               	movwf	??_actualizarPantalla
   624     0387  0754               	addwf	??_actualizarPantalla,w
   625     0388  3E58               	addlw	(low (actualizarPantalla@digits| 0))& (0+255)
   626     0389  0084               	movwf	4
   627     038A  0800               	movf	0,w
   628     038B  00D5               	movwf	??_actualizarPantalla+1
   629     038C  0A84               	incf	4,f
   630     038D  0800               	movf	0,w
   631     038E  00D6               	movwf	??_actualizarPantalla+2
   632     038F  0D56               	rlf	??_actualizarPantalla+2,w
   633     0390  0CD6               	rrf	??_actualizarPantalla+2,f
   634     0391  0CD5               	rrf	??_actualizarPantalla+1,f
   635     0392  0D56               	rlf	??_actualizarPantalla+2,w
   636     0393  0CD6               	rrf	??_actualizarPantalla+2,f
   637     0394  0CD5               	rrf	??_actualizarPantalla+1,f
   638     0395  0D56               	rlf	??_actualizarPantalla+2,w
   639     0396  0CD6               	rrf	??_actualizarPantalla+2,f
   640     0397  0CD5               	rrf	??_actualizarPantalla+1,f
   641     0398  0855               	movf	??_actualizarPantalla+1,w
   642     0399  3901               	andlw	1
   643     039A  00D7               	movwf	??_actualizarPantalla+3
   644     039B  0DD7               	rlf	??_actualizarPantalla+3,f
   645     039C  0DD7               	rlf	??_actualizarPantalla+3,f
   646     039D  0DD7               	rlf	??_actualizarPantalla+3,f
   647     039E  0806               	movf	6,w	;volatile
   648     039F  0657               	xorwf	??_actualizarPantalla+3,w
   649     03A0  39F7               	andlw	-9
   650     03A1  0657               	xorwf	??_actualizarPantalla+3,w
   651     03A2  0086               	movwf	6	;volatile
   652     03A3                     l762:
   653                           
   654                           ;../main_adc.c: 40:         PORTBbits.RB4 = (i == 3);
   655     03A3  3003               	movlw	3
   656     03A4  0660               	xorwf	actualizarPantalla@i,w
   657     03A5  0461               	iorwf	actualizarPantalla@i+1,w
   658     03A6  1903               	btfsc	3,2
   659     03A7  2BA9               	goto	u431
   660     03A8  2BAD               	goto	u430
   661     03A9                     u431:
   662     03A9  1283               	bcf	3,5	;RP0=0, select bank0
   663     03AA  1303               	bcf	3,6	;RP1=0, select bank0
   664     03AB  1606               	bsf	6,4	;volatile
   665     03AC  2BB0               	goto	u444
   666     03AD                     u430:
   667     03AD  1283               	bcf	3,5	;RP0=0, select bank0
   668     03AE  1303               	bcf	3,6	;RP1=0, select bank0
   669     03AF  1206               	bcf	6,4	;volatile
   670     03B0                     u444:
   671     03B0                     l764:
   672                           
   673                           ;../main_adc.c: 41:         PORTBbits.RB5 = (i == 2);
   674     03B0  3002               	movlw	2
   675     03B1  0660               	xorwf	actualizarPantalla@i,w
   676     03B2  0461               	iorwf	actualizarPantalla@i+1,w
   677     03B3  1903               	btfsc	3,2
   678     03B4  2BB6               	goto	u451
   679     03B5  2BBA               	goto	u450
   680     03B6                     u451:
   681     03B6  1283               	bcf	3,5	;RP0=0, select bank0
   682     03B7  1303               	bcf	3,6	;RP1=0, select bank0
   683     03B8  1686               	bsf	6,5	;volatile
   684     03B9  2BBD               	goto	u464
   685     03BA                     u450:
   686     03BA  1283               	bcf	3,5	;RP0=0, select bank0
   687     03BB  1303               	bcf	3,6	;RP1=0, select bank0
   688     03BC  1286               	bcf	6,5	;volatile
   689     03BD                     u464:
   690     03BD                     l766:
   691                           
   692                           ;../main_adc.c: 42:         PORTBbits.RB6 = (i == 1);
   693     03BD  0360               	decf	actualizarPantalla@i,w
   694     03BE  0461               	iorwf	actualizarPantalla@i+1,w
   695     03BF  1903               	btfsc	3,2
   696     03C0  2BC2               	goto	u471
   697     03C1  2BC6               	goto	u470
   698     03C2                     u471:
   699     03C2  1283               	bcf	3,5	;RP0=0, select bank0
   700     03C3  1303               	bcf	3,6	;RP1=0, select bank0
   701     03C4  1706               	bsf	6,6	;volatile
   702     03C5  2BC9               	goto	u484
   703     03C6                     u470:
   704     03C6  1283               	bcf	3,5	;RP0=0, select bank0
   705     03C7  1303               	bcf	3,6	;RP1=0, select bank0
   706     03C8  1306               	bcf	6,6	;volatile
   707     03C9                     u484:
   708     03C9                     l768:
   709                           
   710                           ;../main_adc.c: 43:         PORTBbits.RB7 = (i == 0);
   711     03C9  0860               	movf	actualizarPantalla@i,w
   712     03CA  0461               	iorwf	actualizarPantalla@i+1,w
   713     03CB  1903               	btfsc	3,2
   714     03CC  2BCE               	goto	u491
   715     03CD  2BD2               	goto	u490
   716     03CE                     u491:
   717     03CE  1283               	bcf	3,5	;RP0=0, select bank0
   718     03CF  1303               	bcf	3,6	;RP1=0, select bank0
   719     03D0  1786               	bsf	6,7	;volatile
   720     03D1  2BD5               	goto	u504
   721     03D2                     u490:
   722     03D2  1283               	bcf	3,5	;RP0=0, select bank0
   723     03D3  1303               	bcf	3,6	;RP1=0, select bank0
   724     03D4  1386               	bcf	6,7	;volatile
   725     03D5                     u504:
   726     03D5                     l770:
   727                           
   728                           ;../main_adc.c: 46:         PORTAbits.RA2 = (i != 0);
   729     03D5  0860               	movf	actualizarPantalla@i,w
   730     03D6  0461               	iorwf	actualizarPantalla@i+1,w
   731     03D7  1D03               	btfss	3,2
   732     03D8  2BDA               	goto	u511
   733     03D9  2BDE               	goto	u510
   734     03DA                     u511:
   735     03DA  1283               	bcf	3,5	;RP0=0, select bank0
   736     03DB  1303               	bcf	3,6	;RP1=0, select bank0
   737     03DC  1505               	bsf	5,2	;volatile
   738     03DD  2BE1               	goto	u524
   739     03DE                     u510:
   740     03DE  1283               	bcf	3,5	;RP0=0, select bank0
   741     03DF  1303               	bcf	3,6	;RP1=0, select bank0
   742     03E0  1105               	bcf	5,2	;volatile
   743     03E1                     u524:
   744     03E1                     l772:
   745                           
   746                           ;../main_adc.c: 48:         _delay((unsigned long)((20)*(500000/4000.0)));
   747     03E1  3004               	movlw	4
   748     03E2  00D5               	movwf	??_actualizarPantalla+1
   749     03E3  303D               	movlw	61
   750     03E4  00D4               	movwf	??_actualizarPantalla
   751     03E5                     u617:
   752     03E5  0BD4               	decfsz	??_actualizarPantalla,f
   753     03E6  2BE5               	goto	u617
   754     03E7  0BD5               	decfsz	??_actualizarPantalla+1,f
   755     03E8  2BE5               	goto	u617
   756     03E9  2BEA               	nop2
   757     03EA                     l774:
   758                           
   759                           ;../main_adc.c: 49:     }
   760     03EA  3001               	movlw	1
   761     03EB  07E0               	addwf	actualizarPantalla@i,f
   762     03EC  1803               	skipnc
   763     03ED  0AE1               	incf	actualizarPantalla@i+1,f
   764     03EE  3000               	movlw	0
   765     03EF  07E1               	addwf	actualizarPantalla@i+1,f
   766     03F0                     l776:
   767     03F0  0861               	movf	actualizarPantalla@i+1,w
   768     03F1  3A80               	xorlw	128
   769     03F2  00FF               	movwf	btemp+1
   770     03F3  3080               	movlw	128
   771     03F4  027F               	subwf	btemp+1,w
   772     03F5  1D03               	skipz
   773     03F6  2BF9               	goto	u535
   774     03F7  3004               	movlw	4
   775     03F8  0260               	subwf	actualizarPantalla@i,w
   776     03F9                     u535:
   777     03F9  1C03               	skipc
   778     03FA  2BFC               	goto	u531
   779     03FB  2BFD               	goto	u530
   780     03FC                     u531:
   781     03FC  2B46               	goto	l760
   782     03FD                     u530:
   783     03FD                     l23:
   784     03FD  0008               	return
   785     03FE                     __end_of_actualizarPantalla:
   786                           
   787                           	psect	text2
   788     023A                     __ptext2:	
   789 ;; *************** function ___lwmod *****************
   790 ;; Defined at:
   791 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  divisor         2   13[COMMON] unsigned int 
   794 ;;  dividend        2   15[COMMON] unsigned int 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  counter         1   17[COMMON] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2   13[COMMON] unsigned int 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1
   806 ;;      Params:         4       0       0
   807 ;;      Locals:         1       0       0
   808 ;;      Temps:          0       0       0
   809 ;;      Totals:         5       0       0
   810 ;;Total ram usage:        5 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_actualizarPantalla
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819     023A                     ___lwmod:	
   820                           ;psect for function ___lwmod
   821                           
   822     023A                     l724:	
   823                           ;incstack = 0
   824                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   825                           
   826     023A  084D               	movf	___lwmod@divisor,w
   827     023B  044E               	iorwf	___lwmod@divisor+1,w
   828     023C  1903               	btfsc	3,2
   829     023D  2A3F               	goto	u371
   830     023E  2A40               	goto	u370
   831     023F                     u371:
   832     023F  2A6D               	goto	l742
   833     0240                     u370:
   834     0240                     l726:
   835     0240  3001               	movlw	1
   836     0241  00D1               	movwf	___lwmod@counter
   837     0242  2A4C               	goto	l732
   838     0243                     l728:
   839     0243  3001               	movlw	1
   840     0244                     u385:
   841     0244  1003               	clrc
   842     0245  0DCD               	rlf	___lwmod@divisor,f
   843     0246  0DCE               	rlf	___lwmod@divisor+1,f
   844     0247  3EFF               	addlw	-1
   845     0248  1D03               	skipz
   846     0249  2A44               	goto	u385
   847     024A                     l730:
   848     024A  3001               	movlw	1
   849     024B  07D1               	addwf	___lwmod@counter,f
   850     024C                     l732:
   851     024C  1FCE               	btfss	___lwmod@divisor+1,7
   852     024D  2A4F               	goto	u391
   853     024E  2A50               	goto	u390
   854     024F                     u391:
   855     024F  2A43               	goto	l728
   856     0250                     u390:
   857     0250                     l734:
   858     0250  084E               	movf	___lwmod@divisor+1,w
   859     0251  0250               	subwf	___lwmod@dividend+1,w
   860     0252  1D03               	skipz
   861     0253  2A56               	goto	u405
   862     0254  084D               	movf	___lwmod@divisor,w
   863     0255  024F               	subwf	___lwmod@dividend,w
   864     0256                     u405:
   865     0256  1C03               	skipc
   866     0257  2A59               	goto	u401
   867     0258  2A5A               	goto	u400
   868     0259                     u401:
   869     0259  2A60               	goto	l738
   870     025A                     u400:
   871     025A                     l736:
   872     025A  084D               	movf	___lwmod@divisor,w
   873     025B  02CF               	subwf	___lwmod@dividend,f
   874     025C  084E               	movf	___lwmod@divisor+1,w
   875     025D  1C03               	skipc
   876     025E  03D0               	decf	___lwmod@dividend+1,f
   877     025F  02D0               	subwf	___lwmod@dividend+1,f
   878     0260                     l738:
   879     0260  3001               	movlw	1
   880     0261                     u415:
   881     0261  1003               	clrc
   882     0262  0CCE               	rrf	___lwmod@divisor+1,f
   883     0263  0CCD               	rrf	___lwmod@divisor,f
   884     0264  3EFF               	addlw	-1
   885     0265  1D03               	skipz
   886     0266  2A61               	goto	u415
   887     0267                     l740:
   888     0267  3001               	movlw	1
   889     0268  02D1               	subwf	___lwmod@counter,f
   890     0269  1D03               	btfss	3,2
   891     026A  2A6C               	goto	u421
   892     026B  2A6D               	goto	u420
   893     026C                     u421:
   894     026C  2A50               	goto	l734
   895     026D                     u420:
   896     026D                     l742:
   897     026D  0850               	movf	___lwmod@dividend+1,w
   898     026E  00CE               	movwf	?___lwmod+1
   899     026F  084F               	movf	___lwmod@dividend,w
   900     0270  00CD               	movwf	?___lwmod
   901     0271                     l410:
   902     0271  0008               	return
   903     0272                     __end_of___lwmod:
   904                           
   905                           	psect	text3
   906     0272                     __ptext3:	
   907 ;; *************** function ___lwdiv *****************
   908 ;; Defined at:
   909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  divisor         2    6[COMMON] unsigned int 
   912 ;;  dividend        2    8[COMMON] unsigned int 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  quotient        2   10[COMMON] unsigned int 
   915 ;;  counter         1   12[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2    6[COMMON] unsigned int 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1
   925 ;;      Params:         4       0       0
   926 ;;      Locals:         3       0       0
   927 ;;      Temps:          0       0       0
   928 ;;      Totals:         7       0       0
   929 ;;Total ram usage:        7 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_actualizarPantalla
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939     0272                     ___lwdiv:	
   940                           ;psect for function ___lwdiv
   941                           
   942     0272                     l698:	
   943                           ;incstack = 0
   944                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   945                           
   946     0272  01CA               	clrf	___lwdiv@quotient
   947     0273  01CB               	clrf	___lwdiv@quotient+1
   948     0274                     l700:
   949     0274  0846               	movf	___lwdiv@divisor,w
   950     0275  0447               	iorwf	___lwdiv@divisor+1,w
   951     0276  1903               	btfsc	3,2
   952     0277  2A79               	goto	u301
   953     0278  2A7A               	goto	u300
   954     0279                     u301:
   955     0279  2AAF               	goto	l720
   956     027A                     u300:
   957     027A                     l702:
   958     027A  3001               	movlw	1
   959     027B  00CC               	movwf	___lwdiv@counter
   960     027C  2A86               	goto	l708
   961     027D                     l704:
   962     027D  3001               	movlw	1
   963     027E                     u315:
   964     027E  1003               	clrc
   965     027F  0DC6               	rlf	___lwdiv@divisor,f
   966     0280  0DC7               	rlf	___lwdiv@divisor+1,f
   967     0281  3EFF               	addlw	-1
   968     0282  1D03               	skipz
   969     0283  2A7E               	goto	u315
   970     0284                     l706:
   971     0284  3001               	movlw	1
   972     0285  07CC               	addwf	___lwdiv@counter,f
   973     0286                     l708:
   974     0286  1FC7               	btfss	___lwdiv@divisor+1,7
   975     0287  2A89               	goto	u321
   976     0288  2A8A               	goto	u320
   977     0289                     u321:
   978     0289  2A7D               	goto	l704
   979     028A                     u320:
   980     028A                     l710:
   981     028A  3001               	movlw	1
   982     028B                     u335:
   983     028B  1003               	clrc
   984     028C  0DCA               	rlf	___lwdiv@quotient,f
   985     028D  0DCB               	rlf	___lwdiv@quotient+1,f
   986     028E  3EFF               	addlw	-1
   987     028F  1D03               	skipz
   988     0290  2A8B               	goto	u335
   989     0291  0847               	movf	___lwdiv@divisor+1,w
   990     0292  0249               	subwf	___lwdiv@dividend+1,w
   991     0293  1D03               	skipz
   992     0294  2A97               	goto	u345
   993     0295  0846               	movf	___lwdiv@divisor,w
   994     0296  0248               	subwf	___lwdiv@dividend,w
   995     0297                     u345:
   996     0297  1C03               	skipc
   997     0298  2A9A               	goto	u341
   998     0299  2A9B               	goto	u340
   999     029A                     u341:
  1000     029A  2AA2               	goto	l716
  1001     029B                     u340:
  1002     029B                     l712:
  1003     029B  0846               	movf	___lwdiv@divisor,w
  1004     029C  02C8               	subwf	___lwdiv@dividend,f
  1005     029D  0847               	movf	___lwdiv@divisor+1,w
  1006     029E  1C03               	skipc
  1007     029F  03C9               	decf	___lwdiv@dividend+1,f
  1008     02A0  02C9               	subwf	___lwdiv@dividend+1,f
  1009     02A1                     l714:
  1010     02A1  144A               	bsf	___lwdiv@quotient,0
  1011     02A2                     l716:
  1012     02A2  3001               	movlw	1
  1013     02A3                     u355:
  1014     02A3  1003               	clrc
  1015     02A4  0CC7               	rrf	___lwdiv@divisor+1,f
  1016     02A5  0CC6               	rrf	___lwdiv@divisor,f
  1017     02A6  3EFF               	addlw	-1
  1018     02A7  1D03               	skipz
  1019     02A8  2AA3               	goto	u355
  1020     02A9                     l718:
  1021     02A9  3001               	movlw	1
  1022     02AA  02CC               	subwf	___lwdiv@counter,f
  1023     02AB  1D03               	btfss	3,2
  1024     02AC  2AAE               	goto	u361
  1025     02AD  2AAF               	goto	u360
  1026     02AE                     u361:
  1027     02AE  2A8A               	goto	l710
  1028     02AF                     u360:
  1029     02AF                     l720:
  1030     02AF  084B               	movf	___lwdiv@quotient+1,w
  1031     02B0  00C7               	movwf	?___lwdiv+1
  1032     02B1  084A               	movf	___lwdiv@quotient,w
  1033     02B2  00C6               	movwf	?___lwdiv
  1034     02B3                     l400:
  1035     02B3  0008               	return
  1036     02B4                     __end_of___lwdiv:
  1037                           
  1038                           	psect	text4
  1039     0215                     __ptext4:	
  1040 ;; *************** function ___wmul *****************
  1041 ;; Defined at:
  1042 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  multiplier      2    0[COMMON] unsigned int 
  1045 ;;  multiplicand    2    2[COMMON] unsigned int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  product         2    4[COMMON] unsigned int 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    0[COMMON] unsigned int 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1
  1057 ;;      Params:         4       0       0
  1058 ;;      Locals:         2       0       0
  1059 ;;      Temps:          0       0       0
  1060 ;;      Totals:         6       0       0
  1061 ;;Total ram usage:        6 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070     0215                     ___wmul:	
  1071                           ;psect for function ___wmul
  1072                           
  1073     0215                     l778:	
  1074                           ;incstack = 0
  1075                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1076                           
  1077     0215  01C4               	clrf	___wmul@product
  1078     0216  01C5               	clrf	___wmul@product+1
  1079     0217                     l780:
  1080     0217  1C40               	btfss	___wmul@multiplier,0
  1081     0218  2A1A               	goto	u541
  1082     0219  2A1B               	goto	u540
  1083     021A                     u541:
  1084     021A  2A21               	goto	l120
  1085     021B                     u540:
  1086     021B                     l782:
  1087     021B  0842               	movf	___wmul@multiplicand,w
  1088     021C  07C4               	addwf	___wmul@product,f
  1089     021D  1803               	skipnc
  1090     021E  0AC5               	incf	___wmul@product+1,f
  1091     021F  0843               	movf	___wmul@multiplicand+1,w
  1092     0220  07C5               	addwf	___wmul@product+1,f
  1093     0221                     l120:
  1094     0221  3001               	movlw	1
  1095     0222                     u555:
  1096     0222  1003               	clrc
  1097     0223  0DC2               	rlf	___wmul@multiplicand,f
  1098     0224  0DC3               	rlf	___wmul@multiplicand+1,f
  1099     0225  3EFF               	addlw	-1
  1100     0226  1D03               	skipz
  1101     0227  2A22               	goto	u555
  1102     0228                     l784:
  1103     0228  3001               	movlw	1
  1104     0229                     u565:
  1105     0229  1003               	clrc
  1106     022A  0CC1               	rrf	___wmul@multiplier+1,f
  1107     022B  0CC0               	rrf	___wmul@multiplier,f
  1108     022C  3EFF               	addlw	-1
  1109     022D  1D03               	skipz
  1110     022E  2A29               	goto	u565
  1111     022F                     l786:
  1112     022F  0840               	movf	___wmul@multiplier,w
  1113     0230  0441               	iorwf	___wmul@multiplier+1,w
  1114     0231  1D03               	btfss	3,2
  1115     0232  2A34               	goto	u571
  1116     0233  2A35               	goto	u570
  1117     0234                     u571:
  1118     0234  2A17               	goto	l780
  1119     0235                     u570:
  1120     0235                     l788:
  1121     0235  0845               	movf	___wmul@product+1,w
  1122     0236  00C1               	movwf	?___wmul+1
  1123     0237  0844               	movf	___wmul@product,w
  1124     0238  00C0               	movwf	?___wmul
  1125     0239                     l122:
  1126     0239  0008               	return
  1127     023A                     __end_of___wmul:
  1128     0000                     ___latbits      equ	0
  1129     007E                     btemp           set	126	;btemp
  1130     007E                     wtemp0          set	126
  1131                           
  1132                           	psect	config
  1133                           
  1134                           ;Config register CONFIG @ 0x2007
  1135                           ;	Oscillator Selection bits
  1136                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1137                           ;	Watchdog Timer Enable bit
  1138                           ;	WDTE = OFF, WDT disabled
  1139                           ;	Power-up Timer Enable bit
  1140                           ;	PWRTE = OFF, PWRT disabled
  1141                           ;	RA5/MCLR/VPP Pin Function Select bit
  1142                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1143                           ;	Brown-out Reset Enable bit
  1144                           ;	BOREN = OFF, BOR disabled
  1145                           ;	Low-Voltage Programming Enable bit
  1146                           ;	LVP = OFF, RB3/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1147                           ;	Data EE Memory Code Protection bit
  1148                           ;	CPD = OFF, Code protection off
  1149                           ;	Flash Program Memory Write Enable bits
  1150                           ;	WRT = OFF, Write protection off
  1151                           ;	In-Circuit Debugger Mode bit
  1152                           ;	DEBUG = 0x1, unprogrammed default
  1153                           ;	CCP1 Pin Selection bit
  1154                           ;	CCPMX = RB2, CCP1 function on RB2
  1155                           ;	Flash Program Memory Code Protection bit
  1156                           ;	CP = OFF, Code protection off
  1157     2007                     	org	8199
  1158     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           62     39      39
    BANK0            32      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_actualizarPantalla
    _actualizarPantalla->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1146
                                             34 COMMON     5     5      0
                            ___lwdiv
                             ___wmul
                 _actualizarPantalla
 ---------------------------------------------------------------------------------
 (1) _actualizarPantalla                                  16    14      2     834
                                             18 COMMON    16    14      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     165
                                             13 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     170
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _actualizarPantalla
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           62      0       0      0.0%
BITBANK0            32      0       0      0.0%
BITBANK1            32      0       0      0.0%
COMMON              62     39      39     62.9%
BANK0               32      0       0      0.0%
BANK1               32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      39      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Dec 20 12:44:34 2024

                             l23 03FD              ___wmul@multiplicand 0042                              l120 0221  
                            l122 0239                              l400 02B3                              l410 0271  
                            l700 0274                              l710 028A                              l702 027A  
                            l712 029B                              l704 027D                              l720 02AF  
                            l800 02C2                              l714 02A1                              l706 0284  
                            l730 024A                              l810 02DB                              l802 02C6  
                            l716 02A2                              l708 0286                              l740 0267  
                            l732 024C                              l724 023A                              l812 02E1  
                            l804 02CA                              l718 02A9                              l734 0250  
                            l726 0240                              l742 026D                              l750 030B  
                            l814 02F7                              l806 02CE                              l736 025A  
                            l728 0243                              l760 0346                              l752 0321  
                            l808 02D5                              l738 0260                              l770 03D5  
                            l762 03A3                              l754 0337                              l746 02FE  
                            l780 0217                              l772 03E1                              l764 03B0  
                            l748 02FE                              l782 021B                              l774 03EA  
                            l766 03BD                              l784 0228                              l776 03F0  
                            l768 03C9                              l792 02B4                              l786 022F  
                            l778 0215                              l698 0272                              l794 02B9  
                            l788 0235                              l796 02BA                              l798 02BB  
                            u300 027A                              u301 0279                              u320 028A  
                            u400 025A                              u321 0289                              u401 0259  
                            u315 027E                              u340 029B                              u420 026D  
                            u341 029A                              u421 026C                              u405 0256  
                            u510 03DE                              u430 03AD                              u335 028B  
                            u415 0261                              u511 03DA                              u431 03A9  
                            u360 02AF                              u504 03D5                              u361 02AE  
                            u345 0297                              u370 0240                              u530 03FD  
                            u450 03BA                              u355 02A3                              u371 023F  
                            u531 03FC                              u451 03B6                              u540 021B  
                            u524 03E1                              u444 03B0                              u541 021A  
                            u390 0250                              u470 03C6                              u391 024F  
                            u535 03F9                              u471 03C2                              u607 02D0  
                            u464 03BD                              u385 0244                              u617 03E5  
                            u570 0235                              u490 03D2                              u571 0234  
                            u555 0222                              u491 03CE                              u484 03C9  
                            u580 02DB                              u565 0229                              u581 02DA  
                            u597 02BD                              fsr0 0004                              indf 0000  
                           _main 02B4                             btemp 007E                             start 0000  
                          ?_main 0040                  __end_of___lwdiv 02B4                  __end_of___lwmod 0272  
                          _TRISB 0086       __end_of_actualizarPantalla 03FE                            status 0003  
                          wtemp0 007E                    main@adc_value 0063                  __initialization 03FE  
                   __end_of_main 02FE                           ??_main 0062                           _ADCON0 001F  
                         _ADCON1 009F                           _ADRESH 001E                           _ADRESL 009E  
                         ___wmul 0215                        ??___lwdiv 004A                        ??___lwmod 0051  
        __end_of__initialization 03FE                   __pcstackCOMMON 0040                       __pmaintext 02B4  
                        ?___wmul 0040               _actualizarPantalla 02FE              ?_actualizarPantalla 0052  
                        ___lwdiv 0272                          ___lwmod 023A                          __ptext1 02FE  
                        __ptext2 023A                          __ptext3 0272                          __ptext4 0215  
           ??_actualizarPantalla 0054             end_of_initialization 03FE                        _PORTAbits 0005  
                      _PORTBbits 0006                        _TRISAbits 0085                   main@voltage_mv 0065  
                 __end_of___wmul 023A              start_initialization 03FE                         ??___wmul 0044  
                      ___latbits 0000                 ___lwdiv@dividend 0048                         ?___lwdiv 0046  
                       ?___lwmod 004D  actualizarPantalla@display_value 0052                 ___lwdiv@quotient 004A  
       actualizarPantalla@digits 0058                   ___wmul@product 0044                ___wmul@multiplier 0040  
                ___lwdiv@divisor 0046              actualizarPantalla@i 0060                  ___lwdiv@counter 004C  
               ___lwmod@dividend 004F                  ___lwmod@divisor 004D                  ___lwmod@counter 0051  
