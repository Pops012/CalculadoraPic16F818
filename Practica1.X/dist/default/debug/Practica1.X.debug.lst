

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 03 14:55:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F818
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F818 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000D                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0014                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     001E                     	;# 
    71     001F                     	;# 
    72     0081                     	;# 
    73     0085                     	;# 
    74     0086                     	;# 
    75     008C                     	;# 
    76     008D                     	;# 
    77     008E                     	;# 
    78     008F                     	;# 
    79     0090                     	;# 
    80     0092                     	;# 
    81     0093                     	;# 
    82     0094                     	;# 
    83     009E                     	;# 
    84     009F                     	;# 
    85     010C                     	;# 
    86     010D                     	;# 
    87     010E                     	;# 
    88     010F                     	;# 
    89     018C                     	;# 
    90     018D                     	;# 
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     008E                     	;# 
   122     008F                     	;# 
   123     0090                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     008F                     	;# 
   167     0090                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179     0006                     _PORTBbits	set	6
   180     0005                     _PORTAbits	set	5
   181     0085                     _TRISA	set	133
   182     0086                     _TRISB	set	134
   183                           
   184                           	psect	cinit
   185     03FE                     start_initialization:	
   186                           ; #config settings
   187                           
   188     03FE                     __initialization:
   189     03FE                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     03FE                     __end_of__initialization:
   193     03FE  0183               	clrf	3
   194     03FF  2B44               	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0040                     __pcstackCOMMON:
   198     0040                     ?_lector:
   199     0040                     ??_lector:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0040                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0040                     ?___wmul:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0040                     ?___awmod:	
   209                           ; 2 bytes @ 0x0
   210                           
   211     0040                     ___wmul@multiplier:	
   212                           ; 2 bytes @ 0x0
   213                           
   214     0040                     ___awmod@divisor:	
   215                           ; 2 bytes @ 0x0
   216                           
   217                           
   218                           ; 2 bytes @ 0x0
   219     0040                     	ds	2
   220     0042                     lector@tecla:
   221     0042                     ___wmul@multiplicand:	
   222                           ; 1 bytes @ 0x2
   223                           
   224     0042                     ___awmod@dividend:	
   225                           ; 2 bytes @ 0x2
   226                           
   227                           
   228                           ; 2 bytes @ 0x2
   229     0042                     	ds	2
   230     0044                     ??___wmul:
   231     0044                     ??___awmod:	
   232                           ; 1 bytes @ 0x4
   233                           
   234     0044                     ___awmod@counter:	
   235                           ; 1 bytes @ 0x4
   236                           
   237     0044                     ___wmul@product:	
   238                           ; 1 bytes @ 0x4
   239                           
   240                           
   241                           ; 2 bytes @ 0x4
   242     0044                     	ds	1
   243     0045                     ___awmod@sign:
   244                           
   245                           ; 1 bytes @ 0x5
   246     0045                     	ds	1
   247     0046                     ??_main:
   248                           
   249                           ; 1 bytes @ 0x6
   250     0046                     	ds	2
   251     0048                     main@resultado:
   252                           
   253                           ; 2 bytes @ 0x8
   254     0048                     	ds	2
   255     004A                     main@valorTecla:
   256                           
   257                           ; 2 bytes @ 0xA
   258     004A                     	ds	2
   259     004C                     main@operacion:
   260                           
   261                           ; 1 bytes @ 0xC
   262     004C                     	ds	1
   263     004D                     main@estado:
   264                           
   265                           ; 1 bytes @ 0xD
   266     004D                     	ds	1
   267     004E                     main@valor1:
   268                           
   269                           ; 2 bytes @ 0xE
   270     004E                     	ds	2
   271     0050                     main@valor2:
   272                           
   273                           ; 2 bytes @ 0x10
   274     0050                     	ds	2
   275     0052                     main@tecla:
   276                           
   277                           ; 1 bytes @ 0x12
   278     0052                     	ds	1
   279                           
   280                           	psect	maintext
   281     0344                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 31 in file "main.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  resultado       2    8[COMMON] int 
   292 ;;  valorTecla      2   10[COMMON] int 
   293 ;;  valor2          2   16[COMMON] int 
   294 ;;  valor1          2   14[COMMON] int 
   295 ;;  tecla           1   18[COMMON] unsigned char 
   296 ;;  estado          1   13[COMMON] unsigned char 
   297 ;;  operacion       1   12[COMMON] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1
   307 ;;      Params:         0       0       0
   308 ;;      Locals:        11       0       0
   309 ;;      Temps:          2       0       0
   310 ;;      Totals:        13       0       0
   311 ;;Total ram usage:       13 bytes
   312 ;; Hardware stack levels required when called: 1
   313 ;; This function calls:
   314 ;;		___awmod
   315 ;;		___wmul
   316 ;;		_lector
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322     0344                     _main:	
   323                           ;psect for function _main
   324                           
   325     0344                     l870:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   328                           
   329                           
   330                           ;main.c: 32:     TRISB=0xF0;
   331     0344  30F0               	movlw	240
   332     0345  1683               	bsf	3,5	;RP0=1, select bank1
   333     0346  1303               	bcf	3,6	;RP1=0, select bank1
   334     0347  0086               	movwf	6	;volatile
   335     0348                     l872:
   336                           
   337                           ;main.c: 33:     TRISA= 0x00;
   338     0348  0185               	clrf	5	;volatile
   339     0349                     l874:
   340                           
   341                           ;main.c: 34:     char tecla;;main.c: 35:     int valor1 = 0, valor2 = 0;
   342     0349  01CE               	clrf	main@valor1
   343     034A  01CF               	clrf	main@valor1+1
   344     034B                     l876:
   345     034B  01D0               	clrf	main@valor2
   346     034C  01D1               	clrf	main@valor2+1
   347     034D                     l878:
   348                           
   349                           ;main.c: 36:     char operacion = 0;
   350     034D  01CC               	clrf	main@operacion
   351     034E                     l880:
   352                           
   353                           ;main.c: 37:     char estado = 0;
   354     034E  01CD               	clrf	main@estado
   355     034F                     l882:
   356                           
   357                           ;main.c: 40:         tecla =lector();
   358     034F  22C1               	fcall	_lector
   359     0350  00D2               	movwf	main@tecla
   360     0351                     l884:
   361                           
   362                           ;main.c: 41:         if(tecla!=0){
   363     0351  0852               	movf	main@tecla,w
   364     0352  1903               	btfsc	3,2
   365     0353  2B55               	goto	u561
   366     0354  2B56               	goto	u560
   367     0355                     u561:
   368     0355  2B4F               	goto	l882
   369     0356                     u560:
   370     0356                     l886:
   371                           
   372                           ;main.c: 42:             if(tecla>='0'&&tecla<='9'){
   373     0356  3030               	movlw	48
   374     0357  0252               	subwf	main@tecla,w
   375     0358  1C03               	skipc
   376     0359  2B5B               	goto	u571
   377     035A  2B5C               	goto	u570
   378     035B                     u571:
   379     035B  2BA7               	goto	l904
   380     035C                     u570:
   381     035C                     l888:
   382     035C  303A               	movlw	58
   383     035D  0252               	subwf	main@tecla,w
   384     035E  1803               	skipnc
   385     035F  2B61               	goto	u581
   386     0360  2B62               	goto	u580
   387     0361                     u581:
   388     0361  2BA7               	goto	l904
   389     0362                     u580:
   390     0362                     l890:
   391                           
   392                           ;main.c: 43:                 int valorTecla = (int)(tecla-'0');
   393     0362  0852               	movf	main@tecla,w
   394     0363  3ED0               	addlw	208
   395     0364  00CA               	movwf	main@valorTecla
   396     0365  30FF               	movlw	255
   397     0366  1803               	skipnc
   398     0367  3000               	movlw	0
   399     0368  00CB               	movwf	main@valorTecla+1
   400     0369                     l892:
   401                           
   402                           ;main.c: 44:                 PORTAbits.RA6 = 1;
   403     0369  1283               	bcf	3,5	;RP0=0, select bank0
   404     036A  1303               	bcf	3,6	;RP1=0, select bank0
   405     036B  1705               	bsf	5,6	;volatile
   406                           
   407                           ;main.c: 45:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   408     036C  3082               	movlw	130
   409     036D  00C7               	movwf	??_main+1
   410     036E  30DD               	movlw	221
   411     036F  00C6               	movwf	??_main
   412     0370                     u687:
   413     0370  0BC6               	decfsz	??_main,f
   414     0371  2B70               	goto	u687
   415     0372  0BC7               	decfsz	??_main+1,f
   416     0373  2B70               	goto	u687
   417     0374  2B75               	nop2
   418     0375                     l894:
   419                           
   420                           ;main.c: 46:                 PORTAbits.RA6 = 0;
   421     0375  1283               	bcf	3,5	;RP0=0, select bank0
   422     0376  1303               	bcf	3,6	;RP1=0, select bank0
   423     0377  1305               	bcf	5,6	;volatile
   424     0378                     l896:
   425                           
   426                           ;main.c: 48:                 if(estado==0){
   427     0378  084D               	movf	main@estado,w
   428     0379  1D03               	btfss	3,2
   429     037A  2B7C               	goto	u591
   430     037B  2B7D               	goto	u590
   431     037C                     u591:
   432     037C  2B8F               	goto	l900
   433     037D                     u590:
   434     037D                     l898:
   435                           
   436                           ;main.c: 49:                     valor1 = (valor1*10 + valorTecla);
   437     037D  084F               	movf	main@valor1+1,w
   438     037E  00C1               	movwf	___wmul@multiplier+1
   439     037F  084E               	movf	main@valor1,w
   440     0380  00C0               	movwf	___wmul@multiplier
   441     0381  300A               	movlw	10
   442     0382  00C2               	movwf	___wmul@multiplicand
   443     0383  3000               	movlw	0
   444     0384  00C3               	movwf	___wmul@multiplicand+1
   445     0385  2243               	fcall	___wmul
   446     0386  084A               	movf	main@valorTecla,w
   447     0387  0740               	addwf	?___wmul,w
   448     0388  00CE               	movwf	main@valor1
   449     0389  084B               	movf	main@valorTecla+1,w
   450     038A  1803               	skipnc
   451     038B  0A4B               	incf	main@valorTecla+1,w
   452     038C  0741               	addwf	?___wmul+1,w
   453     038D  00CF               	movwf	main@valor1+1
   454                           
   455                           ;main.c: 50:                 } else if(estado==2){
   456     038E  2B4F               	goto	l882
   457     038F                     l900:
   458     038F  3002               	movlw	2
   459     0390  064D               	xorwf	main@estado,w
   460     0391  1D03               	btfss	3,2
   461     0392  2B94               	goto	u601
   462     0393  2B95               	goto	u600
   463     0394                     u601:
   464     0394  2BFC               	goto	l21
   465     0395                     u600:
   466     0395                     l902:
   467                           
   468                           ;main.c: 51:                     valor2 = (valor2*10+valorTecla);
   469     0395  0851               	movf	main@valor2+1,w
   470     0396  00C1               	movwf	___wmul@multiplier+1
   471     0397  0850               	movf	main@valor2,w
   472     0398  00C0               	movwf	___wmul@multiplier
   473     0399  300A               	movlw	10
   474     039A  00C2               	movwf	___wmul@multiplicand
   475     039B  3000               	movlw	0
   476     039C  00C3               	movwf	___wmul@multiplicand+1
   477     039D  2243               	fcall	___wmul
   478     039E  084A               	movf	main@valorTecla,w
   479     039F  0740               	addwf	?___wmul,w
   480     03A0  00D0               	movwf	main@valor2
   481     03A1  084B               	movf	main@valorTecla+1,w
   482     03A2  1803               	skipnc
   483     03A3  0A4B               	incf	main@valorTecla+1,w
   484     03A4  0741               	addwf	?___wmul+1,w
   485     03A5  00D1               	movwf	main@valor2+1
   486     03A6  2B4F               	goto	l882
   487     03A7                     l904:
   488     03A7  3041               	movlw	65
   489     03A8  0652               	xorwf	main@tecla,w
   490     03A9  1903               	btfsc	3,2
   491     03AA  2BAC               	goto	u611
   492     03AB  2BAD               	goto	u610
   493     03AC                     u611:
   494     03AC  2BBF               	goto	l912
   495     03AD                     u610:
   496     03AD                     l906:
   497     03AD  3042               	movlw	66
   498     03AE  0652               	xorwf	main@tecla,w
   499     03AF  1903               	btfsc	3,2
   500     03B0  2BB2               	goto	u621
   501     03B1  2BB3               	goto	u620
   502     03B2                     u621:
   503     03B2  2BBF               	goto	l912
   504     03B3                     u620:
   505     03B3                     l908:
   506     03B3  3043               	movlw	67
   507     03B4  0652               	xorwf	main@tecla,w
   508     03B5  1903               	btfsc	3,2
   509     03B6  2BB8               	goto	u631
   510     03B7  2BB9               	goto	u630
   511     03B8                     u631:
   512     03B8  2BBF               	goto	l912
   513     03B9                     u630:
   514     03B9                     l910:
   515     03B9  3044               	movlw	68
   516     03BA  0652               	xorwf	main@tecla,w
   517     03BB  1D03               	btfss	3,2
   518     03BC  2BBE               	goto	u641
   519     03BD  2BBF               	goto	u640
   520     03BE                     u641:
   521     03BE  2BC4               	goto	l914
   522     03BF                     u640:
   523     03BF                     l912:
   524                           
   525                           ;main.c: 54:                 operacion = tecla;
   526     03BF  0852               	movf	main@tecla,w
   527     03C0  00CC               	movwf	main@operacion
   528                           
   529                           ;main.c: 55:                 estado = 2;
   530     03C1  3002               	movlw	2
   531     03C2  00CD               	movwf	main@estado
   532                           
   533                           ;main.c: 56:             } else if(tecla=='*'){
   534     03C3  2B4F               	goto	l882
   535     03C4                     l914:
   536     03C4  302A               	movlw	42
   537     03C5  0652               	xorwf	main@tecla,w
   538     03C6  1D03               	btfss	3,2
   539     03C7  2BC9               	goto	u651
   540     03C8  2BCA               	goto	u650
   541     03C9                     u651:
   542     03C9  2BFC               	goto	l21
   543     03CA                     u650:
   544     03CA                     l916:
   545                           
   546                           ;main.c: 57:                 int resultado = 0;
   547     03CA  01C8               	clrf	main@resultado
   548     03CB  01C9               	clrf	main@resultado+1
   549     03CC                     l918:
   550                           
   551                           ;main.c: 58:                 if(operacion == 'A'){
   552     03CC  3041               	movlw	65
   553     03CD  064C               	xorwf	main@operacion,w
   554     03CE  1D03               	btfss	3,2
   555     03CF  2BD1               	goto	u661
   556     03D0  2BD2               	goto	u660
   557     03D1                     u661:
   558     03D1  2BDB               	goto	l922
   559     03D2                     u660:
   560     03D2                     l920:
   561                           
   562                           ;main.c: 59:                     resultado = valor1+valor2;
   563     03D2  0850               	movf	main@valor2,w
   564     03D3  074E               	addwf	main@valor1,w
   565     03D4  00C8               	movwf	main@resultado
   566     03D5  0851               	movf	main@valor2+1,w
   567     03D6  1803               	skipnc
   568     03D7  0A51               	incf	main@valor2+1,w
   569     03D8  074F               	addwf	main@valor1+1,w
   570     03D9  00C9               	movwf	main@resultado+1
   571                           
   572                           ;main.c: 60:                 }else if(operacion == 'B'){
   573     03DA  2BEE               	goto	l926
   574     03DB                     l922:
   575     03DB  3042               	movlw	66
   576     03DC  064C               	xorwf	main@operacion,w
   577     03DD  1D03               	btfss	3,2
   578     03DE  2BE0               	goto	u671
   579     03DF  2BE1               	goto	u670
   580     03E0                     u671:
   581     03E0  2BEE               	goto	l926
   582     03E1                     u670:
   583     03E1                     l924:
   584                           
   585                           ;main.c: 61:                     resultado = valor1*valor2;
   586     03E1  084F               	movf	main@valor1+1,w
   587     03E2  00C1               	movwf	___wmul@multiplier+1
   588     03E3  084E               	movf	main@valor1,w
   589     03E4  00C0               	movwf	___wmul@multiplier
   590     03E5  0851               	movf	main@valor2+1,w
   591     03E6  00C3               	movwf	___wmul@multiplicand+1
   592     03E7  0850               	movf	main@valor2,w
   593     03E8  00C2               	movwf	___wmul@multiplicand
   594     03E9  2243               	fcall	___wmul
   595     03EA  0841               	movf	?___wmul+1,w
   596     03EB  00C9               	movwf	main@resultado+1
   597     03EC  0840               	movf	?___wmul,w
   598     03ED  00C8               	movwf	main@resultado
   599     03EE                     l926:
   600                           
   601                           ;main.c: 64:                 valor1 = resultado%1000;
   602     03EE  30E8               	movlw	232
   603     03EF  00C0               	movwf	___awmod@divisor
   604     03F0  3003               	movlw	3
   605     03F1  00C1               	movwf	___awmod@divisor+1
   606     03F2  0849               	movf	main@resultado+1,w
   607     03F3  00C3               	movwf	___awmod@dividend+1
   608     03F4  0848               	movf	main@resultado,w
   609     03F5  00C2               	movwf	___awmod@dividend
   610     03F6  2268               	fcall	___awmod
   611     03F7  0841               	movf	?___awmod+1,w
   612     03F8  00CF               	movwf	main@valor1+1
   613     03F9  0840               	movf	?___awmod,w
   614     03FA  00CE               	movwf	main@valor1
   615     03FB  2B4B               	goto	l876
   616     03FC                     l21:
   617     03FC  2B4F               	goto	l882
   618     03FD  2800               	ljmp	start
   619     03FE                     __end_of_main:
   620                           
   621                           	psect	text1
   622     02C1                     __ptext1:	
   623 ;; *************** function _lector *****************
   624 ;; Defined at:
   625 ;;		line 17 in file "Teclado.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  tecla           1    2[COMMON] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      unsigned char 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1
   639 ;;      Params:         0       0       0
   640 ;;      Locals:         1       0       0
   641 ;;      Temps:          2       0       0
   642 ;;      Totals:         3       0       0
   643 ;;Total ram usage:        3 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652     02C1                     _lector:	
   653                           ;psect for function _lector
   654                           
   655     02C1                     l598:	
   656                           ;incstack = 0
   657                           ; Regs used in _lector: [wreg+status,2+status,0]
   658                           
   659                           
   660                           ;Teclado.c: 18:     char tecla = 0;
   661     02C1  01C2               	clrf	lector@tecla
   662     02C2                     l600:
   663                           
   664                           ;Teclado.c: 19:     PORTBbits.RB0= 1;
   665     02C2  1283               	bcf	3,5	;RP0=0, select bank0
   666     02C3  1303               	bcf	3,6	;RP1=0, select bank0
   667     02C4  1406               	bsf	6,0	;volatile
   668     02C5                     l602:
   669                           
   670                           ;Teclado.c: 20:     PORTBbits.RB1= 0;
   671     02C5  1086               	bcf	6,1	;volatile
   672     02C6                     l604:
   673                           
   674                           ;Teclado.c: 21:     PORTBbits.RB2= 0;
   675     02C6  1106               	bcf	6,2	;volatile
   676     02C7                     l606:
   677                           
   678                           ;Teclado.c: 22:     PORTBbits.RB3= 0;
   679     02C7  1186               	bcf	6,3	;volatile
   680     02C8                     l608:
   681                           
   682                           ;Teclado.c: 23:     if(!PORTBbits.RB4) tecla = '1';
   683     02C8  1A06               	btfsc	6,4	;volatile
   684     02C9  2ACB               	goto	u11
   685     02CA  2ACC               	goto	u10
   686     02CB                     u11:
   687     02CB  2ACE               	goto	l612
   688     02CC                     u10:
   689     02CC                     l610:
   690     02CC  3031               	movlw	49
   691     02CD  00C2               	movwf	lector@tecla
   692     02CE                     l612:
   693                           
   694                           ;Teclado.c: 24:     if(!PORTBbits.RB5) tecla = '2';
   695     02CE  1A86               	btfsc	6,5	;volatile
   696     02CF  2AD1               	goto	u21
   697     02D0  2AD2               	goto	u20
   698     02D1                     u21:
   699     02D1  2AD4               	goto	l616
   700     02D2                     u20:
   701     02D2                     l614:
   702     02D2  3032               	movlw	50
   703     02D3  00C2               	movwf	lector@tecla
   704     02D4                     l616:
   705                           
   706                           ;Teclado.c: 25:     if(!PORTBbits.RB6) tecla = '3';
   707     02D4  1B06               	btfsc	6,6	;volatile
   708     02D5  2AD7               	goto	u31
   709     02D6  2AD8               	goto	u30
   710     02D7                     u31:
   711     02D7  2ADA               	goto	l620
   712     02D8                     u30:
   713     02D8                     l618:
   714     02D8  3033               	movlw	51
   715     02D9  00C2               	movwf	lector@tecla
   716     02DA                     l620:
   717                           
   718                           ;Teclado.c: 26:     if(!PORTBbits.RB7) tecla = 'A';
   719     02DA  1B86               	btfsc	6,7	;volatile
   720     02DB  2ADD               	goto	u41
   721     02DC  2ADE               	goto	u40
   722     02DD                     u41:
   723     02DD  2AE0               	goto	l624
   724     02DE                     u40:
   725     02DE                     l622:
   726     02DE  3041               	movlw	65
   727     02DF  00C2               	movwf	lector@tecla
   728     02E0                     l624:
   729                           
   730                           ;Teclado.c: 27:     PORTBbits.RB0= 0;
   731     02E0  1006               	bcf	6,0	;volatile
   732     02E1                     l626:
   733                           
   734                           ;Teclado.c: 28:     PORTBbits.RB1= 1;
   735     02E1  1486               	bsf	6,1	;volatile
   736     02E2                     l628:
   737                           
   738                           ;Teclado.c: 29:     PORTBbits.RB2= 0;
   739     02E2  1106               	bcf	6,2	;volatile
   740     02E3                     l630:
   741                           
   742                           ;Teclado.c: 30:     PORTBbits.RB3= 0;
   743     02E3  1186               	bcf	6,3	;volatile
   744     02E4                     l632:
   745                           
   746                           ;Teclado.c: 31:     if(!PORTBbits.RB4) tecla = '4';
   747     02E4  1A06               	btfsc	6,4	;volatile
   748     02E5  2AE7               	goto	u51
   749     02E6  2AE8               	goto	u50
   750     02E7                     u51:
   751     02E7  2AEA               	goto	l636
   752     02E8                     u50:
   753     02E8                     l634:
   754     02E8  3034               	movlw	52
   755     02E9  00C2               	movwf	lector@tecla
   756     02EA                     l636:
   757                           
   758                           ;Teclado.c: 32:     if(!PORTBbits.RB5) tecla = '5';
   759     02EA  1A86               	btfsc	6,5	;volatile
   760     02EB  2AED               	goto	u61
   761     02EC  2AEE               	goto	u60
   762     02ED                     u61:
   763     02ED  2AF0               	goto	l640
   764     02EE                     u60:
   765     02EE                     l638:
   766     02EE  3035               	movlw	53
   767     02EF  00C2               	movwf	lector@tecla
   768     02F0                     l640:
   769                           
   770                           ;Teclado.c: 33:     if(!PORTBbits.RB6) tecla = '6';
   771     02F0  1B06               	btfsc	6,6	;volatile
   772     02F1  2AF3               	goto	u71
   773     02F2  2AF4               	goto	u70
   774     02F3                     u71:
   775     02F3  2AF6               	goto	l644
   776     02F4                     u70:
   777     02F4                     l642:
   778     02F4  3036               	movlw	54
   779     02F5  00C2               	movwf	lector@tecla
   780     02F6                     l644:
   781                           
   782                           ;Teclado.c: 34:     if(!PORTBbits.RB7) tecla = 'B';
   783     02F6  1B86               	btfsc	6,7	;volatile
   784     02F7  2AF9               	goto	u81
   785     02F8  2AFA               	goto	u80
   786     02F9                     u81:
   787     02F9  2AFC               	goto	l648
   788     02FA                     u80:
   789     02FA                     l646:
   790     02FA  3042               	movlw	66
   791     02FB  00C2               	movwf	lector@tecla
   792     02FC                     l648:
   793                           
   794                           ;Teclado.c: 35:     PORTBbits.RB0= 0;
   795     02FC  1006               	bcf	6,0	;volatile
   796     02FD                     l650:
   797                           
   798                           ;Teclado.c: 36:     PORTBbits.RB1= 0;
   799     02FD  1086               	bcf	6,1	;volatile
   800     02FE                     l652:
   801                           
   802                           ;Teclado.c: 37:     PORTBbits.RB2= 1;
   803     02FE  1506               	bsf	6,2	;volatile
   804     02FF                     l654:
   805                           
   806                           ;Teclado.c: 38:     PORTBbits.RB3= 0;
   807     02FF  1186               	bcf	6,3	;volatile
   808     0300                     l656:
   809                           
   810                           ;Teclado.c: 39:     if(!PORTBbits.RB4) tecla = '7';
   811     0300  1A06               	btfsc	6,4	;volatile
   812     0301  2B03               	goto	u91
   813     0302  2B04               	goto	u90
   814     0303                     u91:
   815     0303  2B06               	goto	l660
   816     0304                     u90:
   817     0304                     l658:
   818     0304  3037               	movlw	55
   819     0305  00C2               	movwf	lector@tecla
   820     0306                     l660:
   821                           
   822                           ;Teclado.c: 40:     if(!PORTBbits.RB5) tecla = '8';
   823     0306  1A86               	btfsc	6,5	;volatile
   824     0307  2B09               	goto	u101
   825     0308  2B0A               	goto	u100
   826     0309                     u101:
   827     0309  2B0C               	goto	l664
   828     030A                     u100:
   829     030A                     l662:
   830     030A  3038               	movlw	56
   831     030B  00C2               	movwf	lector@tecla
   832     030C                     l664:
   833                           
   834                           ;Teclado.c: 41:     if(!PORTBbits.RB6) tecla = '9';
   835     030C  1B06               	btfsc	6,6	;volatile
   836     030D  2B0F               	goto	u111
   837     030E  2B10               	goto	u110
   838     030F                     u111:
   839     030F  2B12               	goto	l668
   840     0310                     u110:
   841     0310                     l666:
   842     0310  3039               	movlw	57
   843     0311  00C2               	movwf	lector@tecla
   844     0312                     l668:
   845                           
   846                           ;Teclado.c: 42:     if(!PORTBbits.RB7) tecla = 'C';
   847     0312  1B86               	btfsc	6,7	;volatile
   848     0313  2B15               	goto	u121
   849     0314  2B16               	goto	u120
   850     0315                     u121:
   851     0315  2B18               	goto	l672
   852     0316                     u120:
   853     0316                     l670:
   854     0316  3043               	movlw	67
   855     0317  00C2               	movwf	lector@tecla
   856     0318                     l672:
   857                           
   858                           ;Teclado.c: 43:     PORTBbits.RB0= 0;
   859     0318  1006               	bcf	6,0	;volatile
   860     0319                     l674:
   861                           
   862                           ;Teclado.c: 44:     PORTBbits.RB1= 0;
   863     0319  1086               	bcf	6,1	;volatile
   864     031A                     l676:
   865                           
   866                           ;Teclado.c: 45:     PORTBbits.RB2= 0;
   867     031A  1106               	bcf	6,2	;volatile
   868     031B                     l678:
   869                           
   870                           ;Teclado.c: 46:     PORTBbits.RB3= 1;
   871     031B  1586               	bsf	6,3	;volatile
   872     031C                     l680:
   873                           
   874                           ;Teclado.c: 47:     if(!PORTBbits.RB4) tecla = '*';
   875     031C  1A06               	btfsc	6,4	;volatile
   876     031D  2B1F               	goto	u131
   877     031E  2B20               	goto	u130
   878     031F                     u131:
   879     031F  2B22               	goto	l684
   880     0320                     u130:
   881     0320                     l682:
   882     0320  302A               	movlw	42
   883     0321  00C2               	movwf	lector@tecla
   884     0322                     l684:
   885                           
   886                           ;Teclado.c: 48:     if(!PORTBbits.RB5) tecla = '0';
   887     0322  1A86               	btfsc	6,5	;volatile
   888     0323  2B25               	goto	u141
   889     0324  2B26               	goto	u140
   890     0325                     u141:
   891     0325  2B28               	goto	l688
   892     0326                     u140:
   893     0326                     l686:
   894     0326  3030               	movlw	48
   895     0327  00C2               	movwf	lector@tecla
   896     0328                     l688:
   897                           
   898                           ;Teclado.c: 49:     if(!PORTBbits.RB6) tecla = '#';
   899     0328  1B06               	btfsc	6,6	;volatile
   900     0329  2B2B               	goto	u151
   901     032A  2B2C               	goto	u150
   902     032B                     u151:
   903     032B  2B2E               	goto	l692
   904     032C                     u150:
   905     032C                     l690:
   906     032C  3023               	movlw	35
   907     032D  00C2               	movwf	lector@tecla
   908     032E                     l692:
   909                           
   910                           ;Teclado.c: 50:     if(!PORTBbits.RB7) tecla = 'D';
   911     032E  1B86               	btfsc	6,7	;volatile
   912     032F  2B31               	goto	u161
   913     0330  2B32               	goto	u160
   914     0331                     u161:
   915     0331  2B34               	goto	l696
   916     0332                     u160:
   917     0332                     l694:
   918     0332  3044               	movlw	68
   919     0333  00C2               	movwf	lector@tecla
   920     0334                     l696:
   921                           
   922                           ;Teclado.c: 51:     if (tecla!=0){
   923     0334  0842               	movf	lector@tecla,w
   924     0335  1903               	btfsc	3,2
   925     0336  2B38               	goto	u171
   926     0337  2B39               	goto	u170
   927     0338                     u171:
   928     0338  2B42               	goto	l53
   929     0339                     u170:
   930     0339                     l698:
   931                           
   932                           ;Teclado.c: 52:         _delay((unsigned long)((100)*(4000000/4000.0)));
   933     0339  3082               	movlw	130
   934     033A  00C1               	movwf	??_lector+1
   935     033B  30DD               	movlw	221
   936     033C  00C0               	movwf	??_lector
   937     033D                     u697:
   938     033D  0BC0               	decfsz	??_lector,f
   939     033E  2B3D               	goto	u697
   940     033F  0BC1               	decfsz	??_lector+1,f
   941     0340  2B3D               	goto	u697
   942     0341  2B42               	nop2
   943     0342                     l53:	
   944                           ;Teclado.c: 53:     }
   945                           
   946                           
   947                           ;Teclado.c: 54:     return tecla;
   948     0342  0842               	movf	lector@tecla,w
   949     0343                     l54:
   950     0343  0008               	return
   951     0344                     __end_of_lector:
   952                           
   953                           	psect	text2
   954     0243                     __ptext2:	
   955 ;; *************** function ___wmul *****************
   956 ;; Defined at:
   957 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  multiplier      2    0[COMMON] unsigned int 
   960 ;;  multiplicand    2    2[COMMON] unsigned int 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  product         2    4[COMMON] unsigned int 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    0[COMMON] unsigned int 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1
   972 ;;      Params:         4       0       0
   973 ;;      Locals:         2       0       0
   974 ;;      Temps:          0       0       0
   975 ;;      Totals:         6       0       0
   976 ;;Total ram usage:        6 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     0243                     ___wmul:	
   986                           ;psect for function ___wmul
   987                           
   988     0243                     l818:	
   989                           ;incstack = 0
   990                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   991                           
   992     0243  01C4               	clrf	___wmul@product
   993     0244  01C5               	clrf	___wmul@product+1
   994     0245                     l820:
   995     0245  1C40               	btfss	___wmul@multiplier,0
   996     0246  2A48               	goto	u431
   997     0247  2A49               	goto	u430
   998     0248                     u431:
   999     0248  2A4F               	goto	l140
  1000     0249                     u430:
  1001     0249                     l822:
  1002     0249  0842               	movf	___wmul@multiplicand,w
  1003     024A  07C4               	addwf	___wmul@product,f
  1004     024B  1803               	skipnc
  1005     024C  0AC5               	incf	___wmul@product+1,f
  1006     024D  0843               	movf	___wmul@multiplicand+1,w
  1007     024E  07C5               	addwf	___wmul@product+1,f
  1008     024F                     l140:
  1009     024F  3001               	movlw	1
  1010     0250                     u445:
  1011     0250  1003               	clrc
  1012     0251  0DC2               	rlf	___wmul@multiplicand,f
  1013     0252  0DC3               	rlf	___wmul@multiplicand+1,f
  1014     0253  3EFF               	addlw	-1
  1015     0254  1D03               	skipz
  1016     0255  2A50               	goto	u445
  1017     0256                     l824:
  1018     0256  3001               	movlw	1
  1019     0257                     u455:
  1020     0257  1003               	clrc
  1021     0258  0CC1               	rrf	___wmul@multiplier+1,f
  1022     0259  0CC0               	rrf	___wmul@multiplier,f
  1023     025A  3EFF               	addlw	-1
  1024     025B  1D03               	skipz
  1025     025C  2A57               	goto	u455
  1026     025D                     l826:
  1027     025D  0840               	movf	___wmul@multiplier,w
  1028     025E  0441               	iorwf	___wmul@multiplier+1,w
  1029     025F  1D03               	btfss	3,2
  1030     0260  2A62               	goto	u461
  1031     0261  2A63               	goto	u460
  1032     0262                     u461:
  1033     0262  2A45               	goto	l820
  1034     0263                     u460:
  1035     0263                     l828:
  1036     0263  0845               	movf	___wmul@product+1,w
  1037     0264  00C1               	movwf	?___wmul+1
  1038     0265  0844               	movf	___wmul@product,w
  1039     0266  00C0               	movwf	?___wmul
  1040     0267                     l142:
  1041     0267  0008               	return
  1042     0268                     __end_of___wmul:
  1043                           
  1044                           	psect	text3
  1045     0268                     __ptext3:	
  1046 ;; *************** function ___awmod *****************
  1047 ;; Defined at:
  1048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  divisor         2    0[COMMON] int 
  1051 ;;  dividend        2    2[COMMON] int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  sign            1    5[COMMON] unsigned char 
  1054 ;;  counter         1    4[COMMON] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2    0[COMMON] int 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, btemp+1
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1
  1064 ;;      Params:         4       0       0
  1065 ;;      Locals:         2       0       0
  1066 ;;      Temps:          0       0       0
  1067 ;;      Totals:         6       0       0
  1068 ;;Total ram usage:        6 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     0268                     ___awmod:	
  1078                           ;psect for function ___awmod
  1079                           
  1080     0268                     l832:	
  1081                           ;incstack = 0
  1082                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1083                           
  1084     0268  01C5               	clrf	___awmod@sign
  1085     0269                     l834:
  1086     0269  1FC3               	btfss	___awmod@dividend+1,7
  1087     026A  2A6C               	goto	u471
  1088     026B  2A6D               	goto	u470
  1089     026C                     u471:
  1090     026C  2A74               	goto	l840
  1091     026D                     u470:
  1092     026D                     l836:
  1093     026D  09C2               	comf	___awmod@dividend,f
  1094     026E  09C3               	comf	___awmod@dividend+1,f
  1095     026F  0AC2               	incf	___awmod@dividend,f
  1096     0270  1903               	skipnz
  1097     0271  0AC3               	incf	___awmod@dividend+1,f
  1098     0272                     l838:
  1099     0272  01C5               	clrf	___awmod@sign
  1100     0273  0AC5               	incf	___awmod@sign,f
  1101     0274                     l840:
  1102     0274  1FC1               	btfss	___awmod@divisor+1,7
  1103     0275  2A77               	goto	u481
  1104     0276  2A78               	goto	u480
  1105     0277                     u481:
  1106     0277  2A7D               	goto	l844
  1107     0278                     u480:
  1108     0278                     l842:
  1109     0278  09C0               	comf	___awmod@divisor,f
  1110     0279  09C1               	comf	___awmod@divisor+1,f
  1111     027A  0AC0               	incf	___awmod@divisor,f
  1112     027B  1903               	skipnz
  1113     027C  0AC1               	incf	___awmod@divisor+1,f
  1114     027D                     l844:
  1115     027D  0840               	movf	___awmod@divisor,w
  1116     027E  0441               	iorwf	___awmod@divisor+1,w
  1117     027F  1903               	btfsc	3,2
  1118     0280  2A82               	goto	u491
  1119     0281  2A83               	goto	u490
  1120     0282                     u491:
  1121     0282  2AB2               	goto	l862
  1122     0283                     u490:
  1123     0283                     l846:
  1124     0283  01C4               	clrf	___awmod@counter
  1125     0284  0AC4               	incf	___awmod@counter,f
  1126     0285  2A91               	goto	l852
  1127     0286                     l848:
  1128     0286  3001               	movlw	1
  1129     0287                     u505:
  1130     0287  1003               	clrc
  1131     0288  0DC0               	rlf	___awmod@divisor,f
  1132     0289  0DC1               	rlf	___awmod@divisor+1,f
  1133     028A  3EFF               	addlw	-1
  1134     028B  1D03               	skipz
  1135     028C  2A87               	goto	u505
  1136     028D                     l850:
  1137     028D  3001               	movlw	1
  1138     028E  00FF               	movwf	btemp+1
  1139     028F  087F               	movf	btemp+1,w
  1140     0290  07C4               	addwf	___awmod@counter,f
  1141     0291                     l852:
  1142     0291  1FC1               	btfss	___awmod@divisor+1,7
  1143     0292  2A94               	goto	u511
  1144     0293  2A95               	goto	u510
  1145     0294                     u511:
  1146     0294  2A86               	goto	l848
  1147     0295                     u510:
  1148     0295                     l854:
  1149     0295  0841               	movf	___awmod@divisor+1,w
  1150     0296  0243               	subwf	___awmod@dividend+1,w
  1151     0297  1D03               	skipz
  1152     0298  2A9B               	goto	u525
  1153     0299  0840               	movf	___awmod@divisor,w
  1154     029A  0242               	subwf	___awmod@dividend,w
  1155     029B                     u525:
  1156     029B  1C03               	skipc
  1157     029C  2A9E               	goto	u521
  1158     029D  2A9F               	goto	u520
  1159     029E                     u521:
  1160     029E  2AA5               	goto	l858
  1161     029F                     u520:
  1162     029F                     l856:
  1163     029F  0840               	movf	___awmod@divisor,w
  1164     02A0  02C2               	subwf	___awmod@dividend,f
  1165     02A1  0841               	movf	___awmod@divisor+1,w
  1166     02A2  1C03               	skipc
  1167     02A3  03C3               	decf	___awmod@dividend+1,f
  1168     02A4  02C3               	subwf	___awmod@dividend+1,f
  1169     02A5                     l858:
  1170     02A5  3001               	movlw	1
  1171     02A6                     u535:
  1172     02A6  1003               	clrc
  1173     02A7  0CC1               	rrf	___awmod@divisor+1,f
  1174     02A8  0CC0               	rrf	___awmod@divisor,f
  1175     02A9  3EFF               	addlw	-1
  1176     02AA  1D03               	skipz
  1177     02AB  2AA6               	goto	u535
  1178     02AC                     l860:
  1179     02AC  3001               	movlw	1
  1180     02AD  02C4               	subwf	___awmod@counter,f
  1181     02AE  1D03               	btfss	3,2
  1182     02AF  2AB1               	goto	u541
  1183     02B0  2AB2               	goto	u540
  1184     02B1                     u541:
  1185     02B1  2A95               	goto	l854
  1186     02B2                     u540:
  1187     02B2                     l862:
  1188     02B2  0845               	movf	___awmod@sign,w
  1189     02B3  1903               	btfsc	3,2
  1190     02B4  2AB6               	goto	u551
  1191     02B5  2AB7               	goto	u550
  1192     02B6                     u551:
  1193     02B6  2ABC               	goto	l866
  1194     02B7                     u550:
  1195     02B7                     l864:
  1196     02B7  09C2               	comf	___awmod@dividend,f
  1197     02B8  09C3               	comf	___awmod@dividend+1,f
  1198     02B9  0AC2               	incf	___awmod@dividend,f
  1199     02BA  1903               	skipnz
  1200     02BB  0AC3               	incf	___awmod@dividend+1,f
  1201     02BC                     l866:
  1202     02BC  0843               	movf	___awmod@dividend+1,w
  1203     02BD  00C1               	movwf	?___awmod+1
  1204     02BE  0842               	movf	___awmod@dividend,w
  1205     02BF  00C0               	movwf	?___awmod
  1206     02C0                     l306:
  1207     02C0  0008               	return
  1208     02C1                     __end_of___awmod:
  1209     007E                     btemp	set	126	;btemp
  1210     007E                     wtemp0	set	126
  1211                           
  1212                           	psect	config
  1213                           
  1214                           ;Config register CONFIG @ 0x2007
  1215                           ;	Oscillator Selection bits
  1216                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1217                           ;	Watchdog Timer Enable bit
  1218                           ;	WDTE = OFF, WDT disabled
  1219                           ;	Power-up Timer Enable bit
  1220                           ;	PWRTE = OFF, PWRT disabled
  1221                           ;	RA5/MCLR/VPP Pin Function Select bit
  1222                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1223                           ;	Brown-out Reset Enable bit
  1224                           ;	BOREN = OFF, BOR disabled
  1225                           ;	Low-Voltage Programming Enable bit
  1226                           ;	LVP = OFF, RB3/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1227                           ;	Data EE Memory Code Protection bit
  1228                           ;	CPD = OFF, Code protection off
  1229                           ;	Flash Program Memory Write Enable bits
  1230                           ;	WRT = OFF, Write protection off
  1231                           ;	In-Circuit Debugger Mode bit
  1232                           ;	DEBUG = 0x1, unprogrammed default
  1233                           ;	CCP1 Pin Selection bit
  1234                           ;	CCPMX = RB2, CCP1 function on RB2
  1235                           ;	Flash Program Memory Code Protection bit
  1236                           ;	CP = OFF, Code protection off
  1237     2007                     	org	8199
  1238     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           62     19      19
    BANK0            32      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1549
                                              6 COMMON    13    13      0
                            ___awmod
                             ___wmul
                             _lector
 ---------------------------------------------------------------------------------
 (1) _lector                                               3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   ___wmul
   _lector

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON           3E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON              3E     13      13       1       30.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               20      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 03 14:55:18 2024

                     l21 03FC                       l53 0342                       l54 0343  
                     u10 02CC                       u11 02CB                       u20 02D2  
                     u21 02D1                       u30 02D8                       u31 02D7  
                     u40 02DE                       u41 02DD                       u50 02E8  
                     u51 02E7                       u60 02EE                       u61 02ED  
                     u70 02F4                       u71 02F3                       u80 02FA  
                     u81 02F9                       u90 0304                       u91 0303  
    ___wmul@multiplicand 0042                      l140 024F                      l142 0267  
                    l306 02C0                      l600 02C2                      l610 02CC  
                    l602 02C5                      l620 02DA                      l612 02CE  
                    l604 02C6                      l630 02E3                      l622 02DE  
                    l614 02D2                      l606 02C7                      l640 02F0  
                    l632 02E4                      l624 02E0                      l616 02D4  
                    l608 02C8                      l650 02FD                      l642 02F4  
                    l634 02E8                      l626 02E1                      l618 02D8  
                    l820 0245                      l660 0306                      l652 02FE  
                    l644 02F6                      l636 02EA                      l628 02E2  
                    l900 038F                      l822 0249                      l670 0316  
                    l662 030A                      l654 02FF                      l646 02FA  
                    l638 02EE                      l910 03B9                      l902 0395  
                    l840 0274                      l832 0268                      l824 0256  
                    l680 031C                      l672 0318                      l664 030C  
                    l656 0300                      l648 02FC                      l920 03D2  
                    l912 03BF                      l904 03A7                      l850 028D  
                    l842 0278                      l834 0269                      l826 025D  
                    l818 0243                      l690 032C                      l682 0320  
                    l674 0319                      l666 0310                      l658 0304  
                    l922 03DB                      l914 03C4                      l906 03AD  
                    l860 02AC                      l852 0291                      l844 027D  
                    l836 026D                      l828 0263                      l692 032E  
                    l684 0322                      l676 031A                      l668 0312  
                    l924 03E1                      l916 03CA                      l908 03B3  
                    l854 0295                      l846 0283                      l862 02B2  
                    l838 0272                      l694 0332                      l686 0326  
                    l678 031B                      l598 02C1                      l926 03EE  
                    l918 03CC                      l870 0344                      l864 02B7  
                    l856 029F                      l848 0286                      l696 0334  
                    l688 0328                      l880 034E                      l872 0348  
                    l866 02BC                      l858 02A5                      l698 0339  
                    l890 0362                      l882 034F                      l874 0349  
                    l892 0369                      l884 0351                      l876 034B  
                    l894 0375                      l886 0356                      l878 034D  
                    l896 0378                      l888 035C                      l898 037D  
                    u100 030A                      u101 0309                      u110 0310  
                    u111 030F                      u120 0316                      u121 0315  
                    u130 0320                      u131 031F                      u140 0326  
                    u141 0325                      u150 032C                      u151 032B  
                    u160 0332                      u161 0331                      u170 0339  
                    u171 0338                      u510 0295                      u430 0249  
                    u511 0294                      u431 0248                      u520 029F  
                    u600 0395                      u521 029E                      u505 0287  
                    u601 0394                      u610 03AD                      u611 03AC  
                    u540 02B2                      u460 0263                      u620 03B3  
                    u541 02B1                      u525 029B                      u461 0262  
                    u445 0250                      u621 03B2                      u550 02B7  
                    u470 026D                      u630 03B9                      u551 02B6  
                    u535 02A6                      u471 026C                      u455 0257  
                    u631 03B8                      u480 0278                      u640 03BF  
                    u560 0356                      u481 0277                      u641 03BE  
                    u561 0355                      u490 0283                      u650 03CA  
                    u570 035C                      u491 0282                      u651 03C9  
                    u571 035B                      u660 03D2                      u580 0362  
                    u661 03D1                      u581 0361                      u670 03E1  
                    u590 037D                      u671 03E0                      u591 037C  
                    u687 0370                      u697 033D             ___awmod@sign 0045  
                   _main 0344                     btemp 007E                     start 0000  
                  ?_main 0040          __end_of___awmod 02C1                    _TRISA 0085  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 03FE             __end_of_main 03FE              lector@tecla 0042  
                 ??_main 0046                   ___wmul 0243                ??___awmod 0044  
                 _lector 02C1            main@operacion 004C          ___awmod@divisor 0040  
        ___awmod@counter 0044            main@resultado 0048  __end_of__initialization 03FE  
         __pcstackCOMMON 0040               __pmaintext 0344                  ?___wmul 0040  
                ?_lector 0040                  ___awmod 0268                  __ptext1 02C1  
                __ptext2 0243                  __ptext3 0268         ___awmod@dividend 0042  
         main@valorTecla 004A     end_of_initialization 03FE                _PORTAbits 0005  
              _PORTBbits 0006               main@estado 004D               main@valor1 004E  
             main@valor2 0050           __end_of___wmul 0268           __end_of_lector 0344  
    start_initialization 03FE                 ??___wmul 0044                 ??_lector 0040  
              ___latbits 0000                 ?___awmod 0040           ___wmul@product 0044  
      ___wmul@multiplier 0040                main@tecla 0052  
